{"version":3,"sources":["components/useform.js","UserContext.js","components/ErrorNotice.js","components/BaseUrl.js","components/header.js","components/InstaCreate.js","components/TableHeadOf.js","components/SuperAdmin.js","components/Home.js","components/ProtectedRoute.js","components/AdminDashbord.js","components/Institution.js","components/SutdentEdit.js","components/StudentActiveEdit.js","components/User.js","components/Admin.js","components/ProtectedRoute2.js","components/EditSuperAdmin.js","components/ViewSuperAdmin.js","components/EditAdmin.js","components/EditAdminS.js","App.js","serviceWorker.js","index.js"],"names":["useForm","useState","isLogin","setIsLogin","loginOpen","setLoginOpen","token","setToken","undefined","user","loginto","console","log","userdata","setUserData","createContext","stylees","makeStyles","error","border","borderRadius","padding","margin","color","display","justifyContent","alignItems","but","backgroundColor","ErrorNotice","props","classes","className","message","onClick","clearError","styles","theme","toolbar","imgTool","paddingTop","paddingRight","Btm","marginLeft","spacing","modal","paperInput","width","form","flexDirection","text","u","userName","password","oldPassword","newPassword","newConPassword","Header","setUserName","setPassword","setNewConPassword","setNewPassword","setOldPassword","passwordOpen","setPasswordOpen","useContext","UserContext","userDataf","setUserDataf","setLogged","loggged","errors","setErrors","history","useHistory","setError","useform","AppBar","position","Toolbar","Grid","container","item","src","alt","height","style","xs","Button","variant","size","marginRight","role","push","btm","localStorage","setItem","e","Modal","aria-labelledby","aria-describedby","open","onClose","Paper","Typography","TextField","name","label","autoFocus","helperText","value","onChange","target","type","preventDefault","temp","Object","values","every","x","validate","body","a","URL","axios","post","resp","data","response","msg","newLogin","err","validate2","id","headers","change","InstaCreate","error2","setValues","setError2","handleChange","onSubmitChange","instName","required","fullWidth","instEmail","instPhone","instAddress","multiline","rows","side","instWebsite","instLogo","instMaxNumber","utils","DateFnsUtils","disableToolbar","format","inputVariant","instSubDate","date","KeyboardButtonProps","button","TableHeadOf","TableHead","TableRow","TableCell","align","marginTop","paddingLeft","addPaper","link","textDecoration","intitalFeildValues","Date","instActive","SuperAdmin","addOpen","setAddOpen","retValues","setRetValues","useEffect","getDetails","get","found","endIcon","Icon","Dialog","maxWidth","create","test","length","TableContainer","component","table","Table","arial-label","TableBody","map","index","key","to","_id","Avatar","IconButton","window","alert","url","delete","h","l","deleteHandler","paper","Home","ProtectedRoute","Component","rest","render","pathname","instSubCat","instCat","instSutdentDetails","AdminDashbord","match","valuesToEdit","setValuesToEdit","activeUser","setActiveUser","togetdata","params","foundDataTo","active","val","Boolean","Institution","toUpdateInst","put","reply","SutdentEdit","student","valuesInst","DialogTitle","DialogContent","stuName","stuId","stuEmail","stuPhone","FormControl","stuCat","InputLabel","Select","labelId","split","MenuItem","FormHelperText","stuSubCat","stuParentName","stuRelation","stuParentNumber","stuParentEmail","btn","Transition","React","forwardRef","ref","Slide","direction","initialStudent","marginBottom","CurrentId","editOpen","setEditOpen","editStudent","setEditSudent","toGetStudentDe","uid","Axios","TransitionComponent","keepMounted","stuNam","FormControlLabel","control","Checkbox","checked","inputProps","initialValues","instAdmin","User","setOpen","setValuesInst","setStudent","setCurrentid","deleteuser","confirm","j","idd","pic","editbtn","root","intitalAdminValues","adminName","adminEmail","adminPhone","adminUserName","adminEmplyDes","adminEmplyId","adminId","ViewSuperAdmin","valuesToView","setValuesToView","valuesAdmin","setValue","isActive","setIsActive","slice","BottomNavigation","event","newValue","showLabels","BottomNavigationAction","icon","exact","path","ProtectedRoute2","EditSuperAdmin","addAdminOpen","setAddAdminOpen","setValuesAdmin","setErrors2","adminConPassword","setAdminConPassword","adminPassword","setAdminPassword","con","setCon","handleChangeadmin","btnG","RegId","upUrl","body2","d","deleteHandlerAdmin","EditAdmin","getAdminDetails","foundAdmin","disabled","submitEdit","foundEdited","App","getItem","checkLogedIn","Provider","Container","Admin","EditAdminS","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ccb6c05d.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nconst useForm = () => {\r\n    const [isLogin,setIsLogin] = useState(() =>  false)\r\n    const loginto = () => {\r\n        // setIsLogin(!isLogin)\r\n        console.log(\"vf\")\r\n    }\r\n    const [loginOpen,setLoginOpen] = useState(false)\r\n    const [token,setToken] = useState(\"\")\r\n    const [userdata, setUserData] = useState({\r\n        token:undefined,\r\n        user:undefined,\r\n    })\r\n    return {\r\n        isLogin,\r\n        setIsLogin,\r\n        loginto,\r\n        loginOpen,setLoginOpen,\r\n        userdata, setUserData,\r\n        token,setToken,\r\n\r\n    }\r\n}\r\n\r\nexport default useForm;","import {createContext} from 'react';\r\n\r\nexport default createContext(null)","import { makeStyles } from '@material-ui/core'\r\nimport React from 'react'\r\nconst stylees = makeStyles(() => ({\r\n    error: {\r\n\r\n        border: \"0px\",\r\n        borderRadius: \"10px\",\r\n        padding: \"4px 8px\",\r\n        margin: \"5px 0\",\r\n        color: \"#ec0101\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\"\r\n    },\r\n    but :{\r\n        backgroundColor:\"#fff\",\r\n        borderRadius:\"50px\",\r\n        border:\"0px\",\r\n        color:\"#ec0101\"\r\n    }\r\n}))\r\nexport default function ErrorNotice(props) {\r\n    const classes = stylees();\r\n    return (\r\n        <div className={classes.error}>\r\n            <span>{props.message}</span>\r\n            <button onClick={props.clearError} className={classes.but} >X</button>\r\n        </div>\r\n    )\r\n}\r\n","const BaseUrl = \"\";\r\nexport default BaseUrl ;","import React, { Fragment,  useState, useContext, } from 'react'\r\nimport { AppBar, Grid,  Toolbar, makeStyles, Button, TextField,  } from '@material-ui/core';\r\nimport useform from './useform';\r\nimport {  Modal, Paper, Typography } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom'\r\nimport UserContext from '../UserContext';\r\nimport ErrorNotice from './ErrorNotice';\r\nimport baseURL from './BaseUrl'\r\n\r\n\r\n\r\n\r\n\r\nconst styles = makeStyles(theme => ({\r\n    toolbar: {\r\n        backgroundColor: \"#f6f5f5\",\r\n    },\r\n    imgTool: {\r\n        paddingTop: \"10px\",\r\n        paddingRight: \"5px\"\r\n    },\r\n    Btm: {\r\n        marginLeft: theme.spacing(2)\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }, paperInput: {\r\n        padding: '25px',\r\n        margin: '20px',\r\n        width: \"400px\"\r\n    },\r\n    form: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    text: {\r\n        margin: \"10px 0px\"\r\n    }\r\n\r\n}))\r\n\r\n\r\nconst u = {\r\n    userName: \"\",\r\n    password :\"\",\r\n    oldPassword : \"\",\r\n    newPassword : \"\",\r\n    newConPassword : \"\",\r\n}\r\n\r\nfunction Header(props) {\r\n\r\n    const classes = styles();\r\n    const [userName, setUserName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newConPassword, setNewConPassword] = useState(\"\")\r\n    const [newPassword, setNewPassword] = useState(\"\")\r\n    const [oldPassword, setOldPassword] = useState(\"\")\r\n    const [passwordOpen, setPasswordOpen] = useState(false)\r\n    const { userDataf, setUserDataf, loggged, setLogged } = useContext(UserContext);\r\n    const [errors, setErrors] = useState(u)\r\n    const history = useHistory();\r\n    const [error, setError] = useState('');\r\n    // const [errors,setErrors]= useState('');\r\n    // console.log(userDataf)\r\n    const handleSignOut = () => {\r\n        setUserDataf({\r\n            token: undefined,\r\n            user: undefined,\r\n        });\r\n        localStorage.setItem(\"auth-token\", \"\");\r\n        history.push('/');\r\n\r\n    }\r\n\r\n    const handleChangePass = () => {\r\n        setPasswordOpen(true)\r\n    }\r\n\r\n    var {\r\n        setLoginOpen,\r\n        isLogin,\r\n        loginOpen,\r\n        setIsLogin,\r\n\r\n    } = useform();\r\n\r\n    const validate = () => {\r\n        var temp = {}\r\n\r\n        temp.userName = userName ? \"\" : \"This Feild is required.\"\r\n        temp.password = password ? \"\" : \"This Feild is required.\"\r\n    \r\n// console.log(temp)\r\n        setErrors({\r\n            ...temp\r\n        })\r\n            return Object.values(temp).every(x => x === \"\")\r\n    }\r\n\r\n\r\n    const validate2 = () => {\r\n        var temp = {}\r\n\r\n\r\n        temp.oldPassword = oldPassword ? \"\" : \"This Feild is required.\"\r\n        temp.newPassword = newPassword ? \"\" : \"This Feild is required.\"\r\n        temp.newConPassword = newConPassword === newPassword ? \"\" : \"Password did not match.\"\r\n// console.log(temp)\r\n        setErrors({\r\n            ...temp\r\n        })\r\n            return Object.values(temp).every(x => x === \"\")\r\n    }\r\n\r\n    const handleLogin = (e) => {\r\n        setLoginOpen(true)\r\n    }\r\n\r\n    const handlesubmitChange = (e) => {\r\n        e.preventDefault();\r\n       if(validate2()){ try {\r\n            const body = {\r\n                oldPassword: oldPassword,\r\n                password: newPassword,\r\n                id: userDataf.user.id\r\n            }\r\n            // console.log(body)\r\n            const change = async (body) => {\r\n                URL = baseURL + \"/user/changepassword\";\r\n                try {\r\n                    const resp = await axios.post(URL, body, { headers: { \"x-auth-token\": userDataf.token } })\r\n                    setPasswordOpen(false)\r\n                    setError('')\r\n                    setErrors(u)\r\n                    setNewConPassword('')\r\n                    setNewPassword('')\r\n                }\r\n                catch (err) {\r\n                    err.response.data.msg && setError(err.response.data.msg)\r\n                }\r\n            }\r\n            change(body);\r\n        } catch (err) {\r\n            console.log(err.response.data.msg)\r\n            err.response.data.msg && setError(err.response.data.msg)\r\n\r\n        }}\r\n\r\n    }\r\n\r\n    const handleDashboard = () => {\r\n        console.log(userDataf.user.role, \"dashBoard\")\r\n        if (userDataf.user.role) {\r\n            console.log(userDataf.user.role)\r\n            history.push(`/${userDataf.user.role}`)\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n       if(validate()) {\r\n           console.log(\"hey login\")\r\n        try {\r\n            const body = {\r\n                userName: userName,\r\n                password: password\r\n            }\r\n            const newLogin = async (body) => {\r\n                URL = baseURL + \"/user/login\"\r\n                try {\r\n                    const resp = await axios.post(URL, body)\r\n                    console.log(\"ohh noo it's here\")\r\n                    setUserDataf({\r\n                        token: resp.data.token,\r\n                        user: resp.data.user,\r\n                    })\r\n                    setLoginOpen(false)\r\n                    localStorage.setItem(\"auth-token\", resp.data.token);\r\n                    setLogged(resp.data.user.role)\r\n                    setUserName('')\r\n                    setPassword('')\r\n                    setError('')\r\n                    setErrors(u)\r\n\r\n                } catch (err) {\r\n                    err.response.data.msg && setError(err.response.data.msg)\r\n                }\r\n            }\r\n            newLogin(body)\r\n\r\n        }\r\n        catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg)\r\n\r\n        }}\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <AppBar position=\"sticky\" className={classes.toolbar} >\r\n                <Toolbar>\r\n                    <Grid container>\r\n                        <Grid item >\r\n                            <Grid container>\r\n                                <img src=\"https://upload.wikimedia.org/wikipedia/commons/5/54/American_Broadcasting_Company_Logo.svg\" alt=\"logo\" width=\"40\" height=\"40\" className={classes.imgTool} />\r\n                                <h3 style={{ color: '#14274e' }}>\r\n                                    ABC Corporation\r\n                            </h3>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                        </Grid>\r\n                        <Grid item style={{ paddingTop: '12px' }}>\r\n                            {userDataf.user ?\r\n                                <><Button variant=\"outlined\" color=\"primary\" size=\"small\" style={{ marginRight: '12px' }}\r\n                                    onClick={handleDashboard}\r\n                                >\r\n                                    Dashboard\r\n                    </Button>\r\n                                    <Button variant=\"outlined\" color=\"primary\" size=\"small\" style={{ marginRight: '12px' }}\r\n                                        onClick={handleChangePass}\r\n                                    >\r\n                                        Change Password\r\n                            </Button>\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        color=\"secondary\"\r\n                                        size=\"small\"\r\n                                        className={classes.btm}\r\n                                        onClick={handleSignOut}\r\n                                    >\r\n                                        Sign Out\r\n                            </Button>\r\n                                </> : <Button\r\n                                    variant=\"outlined\" color=\"primary\"\r\n                                    className={classes.btm} onClick={handleLogin}\r\n                                >\r\n                                    Login\r\n                            </Button>}\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Modal\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={loginOpen}\r\n                onClose={() => { setLoginOpen(false); setUserName(''); setPassword(''); setError('');setErrors(u); }}\r\n                className={classes.modal}\r\n            >\r\n                <Paper className={classes.paperInput}>\r\n\r\n                    <form className={classes.form}>\r\n                        <Typography\r\n                            variant=\"h5\" >\r\n                            Login\r\n            </Typography>\r\n                        {error && <ErrorNotice message={error} clearError={() => setError('')} />}\r\n                        <TextField\r\n                            name=\"userName\"\r\n                            variant=\"outlined\"\r\n                            label=\"Username\"\r\n                            autoFocus\r\n                            className={classes.text}\r\n                            {...(errors.userName && {error:true,helperText:errors.userName})}\r\n\r\n                            value={userName}\r\n                            onChange={(e) => { setUserName(e.target.value) }}\r\n\r\n                        />\r\n                        <TextField\r\n                            name=\"password\"\r\n                            variant=\"outlined\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            className={classes.text}\r\n                            value={password}\r\n                            {...(errors.password && {error:true,helperText:errors.password})}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n\r\n                        />\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}\r\n                            type=\"submit\">\r\n                            Login\r\n            </Button>\r\n                    </form>\r\n\r\n                </Paper>\r\n            </Modal>\r\n            <Modal\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={passwordOpen}\r\n                onClose={() => { setPasswordOpen(false); setNewPassword(''); setOldPassword(''); setNewConPassword(\"\"); setError(''); setErrors(u);}}\r\n                className={classes.modal}\r\n            >\r\n                <Paper className={classes.paperInput}>\r\n\r\n                    <form className={classes.form}>\r\n                        <Typography\r\n                            variant=\"h5\" >\r\n                            Change Password\r\n            </Typography>\r\n                        {error && <ErrorNotice message={error} clearError={() => setError('')} />}\r\n                        <TextField\r\n                            name=\"oldPassword\"\r\n                            variant=\"outlined\"\r\n                            label=\"Current password\"\r\n                            autoFocus\r\n                            className={classes.text}\r\n                            {...(errors.oldPassword && {error:true,helperText:errors.oldPassword})}\r\n                            value={oldPassword}\r\n                            onChange={(e) => { setOldPassword(e.target.value) }}\r\n\r\n                        />\r\n                        <TextField\r\n                            name=\"Newpassword\"\r\n                            variant=\"outlined\"\r\n                            label=\"New Password\"\r\n                            type=\"password\"\r\n                            className={classes.text}\r\n                            {...(errors.newPassword && {error:true,helperText:errors.newPassword})}\r\n                            value={newPassword}\r\n                            onChange={(e) => setNewPassword(e.target.value)}\r\n\r\n                        />\r\n                        <TextField\r\n                            name=\"NewConpassword\"\r\n                            variant=\"outlined\"\r\n                            label=\"Confirm New Password\"\r\n                            type=\"password\"\r\n                            className={classes.text}\r\n                            {...(errors.newConPassword && {error:true,helperText:errors.newConPassword})}\r\n                            value={newConPassword}\r\n                            onChange={(e) => setNewConPassword(e.target.value)}\r\n\r\n                        />\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={handlesubmitChange}\r\n                            type=\"submit\">\r\n                            change password\r\n            </Button>\r\n                    </form>\r\n\r\n                </Paper>\r\n            </Modal>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default Header","import { Button, Grid, Paper, TextField, Typography, } from '@material-ui/core'\r\nimport React from 'react';\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nimport ErrorNotice from './ErrorNotice';\r\n\r\n\r\n\r\nexport default function InstaCreate({values,error2, setValues,setError2,handleChange,onSubmitChange,classes,errors,}) {\r\n    return (\r\n        <div>\r\n            <Paper className={classes.paperInput}>\r\n                <form>\r\n                    <Typography variant=\"h5\">\r\n                        Add Institute Details\r\n                        </Typography>\r\n                        {error2 && <ErrorNotice message={error2} clearError={() => setError2('')} />}\r\n                    <Grid container>\r\n\r\n                        <Grid item xs={6}>\r\n\r\n                            <TextField\r\n                                name=\"instName\"\r\n                                variant=\"outlined\"\r\n                                label=\"Institute Name\"\r\n                                autoFocus\r\n                                value={values.instName}\r\n                                onChange={handleChange}\r\n                                className={classes.text}\r\n                                {...(errors.instName && {error:true,helperText:errors.instName} )}\r\n                                required \r\n                                fullWidth />\r\n                            <TextField\r\n                                name=\"instEmail\"\r\n                                variant=\"outlined\"\r\n                                label=\"Email\"\r\n                                value={values.instEmail}\r\n                                onChange={handleChange}\r\n                                className={classes.text}\r\n                                {...(errors.instEmail && {error:true,helperText:errors.instEmail} )}\r\n                                required \r\n                                fullWidth />\r\n                            <TextField\r\n                                name=\"instPhone\"\r\n                                variant=\"outlined\"\r\n                                label=\"Phone\"\r\n                                value={values.instPhone}\r\n                                onChange={handleChange}\r\n                                className={classes.text}\r\n                                {...(errors.instPhone && {error:true,helperText:errors.instPhone} )}\r\n                                required \r\n                                fullWidth />\r\n                            <TextField\r\n                                name=\"instAddress\"\r\n                                variant=\"outlined\"\r\n                                label=\"Address\"\r\n                                value={values.instAddress}\r\n                                {...(errors.instAddress && {error:true,helperText:errors.instAddress} )}\r\n                                required \r\n                                multiline\r\n                                rows={3}\r\n                                onChange={handleChange}\r\n                                className={classes.text}\r\n                                fullWidth />\r\n                        </Grid>\r\n                        <Grid item xs={6} className={classes.side}>\r\n\r\n                            <TextField\r\n                                name=\"instWebsite\"\r\n                                variant=\"outlined\"\r\n                                label=\"Website\"\r\n                                value={values.instWebsite}\r\n                                {...(errors.instWebsite && {error:true,helperText:errors.instWebsite} )}\r\n                                onChange={handleChange}\r\n                                className={classes.text}\r\n                                required \r\n                                fullWidth />\r\n                            <TextField\r\n                                name=\"instLogo\"\r\n                                variant=\"outlined\"\r\n                                label=\"Logo URL\"\r\n                                value={values.instLogo}\r\n                                onChange={handleChange}\r\n                                {...(errors.instLogo && {error:true,helperText:errors.instLogo} )}\r\n                                className={classes.text}\r\n                                required \r\n                                fullWidth />\r\n                            <TextField\r\n                                name=\"instMaxNumber\"\r\n                                variant=\"outlined\"\r\n                                label=\"Max Number\"\r\n                                value={values.instMaxNumber}\r\n                                {...(errors.instMaxNumber && {error:true,helperText:errors.instMaxNumber} )}\r\n                                onChange={handleChange}\r\n                                required \r\n                                className={classes.text}\r\n                                fullWidth />\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\r\n                                <KeyboardDatePicker\r\n                                    disableToolbar\r\n                                    className={classes.text}\r\n                                    \r\n                                    variant=\"inline\"\r\n                                    name=\"instSubDate\"\r\n                                    format=\"MM/dd/yyyy\"\r\n                                    inputVariant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    value={values.instSubDate}\r\n                                    label=\"Subscription End Date\"\r\n                                    fullWidth\r\n                                    size=\"small\"\r\n                                    onChange={(date) => setValues(values => ({\r\n                                        ...values,\r\n                                        ['instSubDate'] : date\r\n\r\n                                    }))}\r\n                                    // value={selectedDate}\r\n                                    // onChange={handleDateChange}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change date',\r\n                                    }}\r\n                                />\r\n                            </MuiPickersUtilsProvider>\r\n                            <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n                                onClick={onSubmitChange} >\r\n                                Save\r\n                            </Button>\r\n\r\n\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import { TableHead, TableRow ,TableCell} from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nexport default function TableHeadOf() {\r\n    return (\r\n        <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>\r\n                            Logo\r\n                        </TableCell>\r\n                        <TableCell>\r\n                            Institute Name\r\n                        </TableCell>\r\n                        <TableCell align='right'>\r\n                            Phone Number\r\n                        </TableCell>\r\n                        <TableCell align='right'>\r\n                            Email\r\n                        </TableCell>\r\n                        <TableCell align='right'>\r\n                            Active Status\r\n                        </TableCell>\r\n                        <TableCell align='right'>\r\n                            Actions\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n    )\r\n}\r\n","import { Button, Dialog, Icon, makeStyles, TableBody, IconButton, Paper, Table, TableCell, TableContainer, TableRow, } from '@material-ui/core'\r\nimport React, { useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport UserContext from \"../UserContext\";\r\nimport InstaCreate from './InstaCreate';\r\nimport baseURL from './BaseUrl';\r\nimport TableHeadOf from './TableHeadOf';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\n\r\nconst style = makeStyles(() => ({\r\n    text: {\r\n        padding: '4px',\r\n        marginTop: \"10px\"\r\n    },\r\n    paperInput: {\r\n        padding: '25px',\r\n    },\r\n    side: {\r\n        paddingLeft: \"20px\"\r\n    },\r\n    button: {\r\n        marginLeft: \"30px\",\r\n        margin: \"10px 0\"\r\n    }, modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }, addPaper: {\r\n        display: 'flex',\r\n        flexDirection: 'row-reverse',\r\n        marginTop: '7px'\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n        color: \"#000\",\r\n\r\n\r\n    }\r\n}))\r\n\r\n\r\nconst intitalFeildValues = {\r\n    instName: \"\",\r\n    instEmail: \"\",\r\n    instPhone: \"\",\r\n    instAddress: \"\",\r\n    instWebsite: \"\",\r\n    instLogo: \"\",\r\n    instSubDate: new Date(),\r\n    instMaxNumber: \"\",\r\n    instActive: false\r\n}\r\n\r\nexport default function SuperAdmin(props) {\r\n    const history = useHistory();\r\n    const [values, setValues] = useState(intitalFeildValues);\r\n    const [errors, setError] = useState(intitalFeildValues);\r\n    const [error2, setError2] = useState();\r\n    const { userDataf } = useContext(UserContext);\r\n    const [addOpen, setAddOpen] = useState(false);\r\n    const [retValues, setRetValues] = useState([]);\r\n    // const [checkActive,setCheckActive] = useState()\r\n\r\n\r\n\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n        window.alert(\"Are You Sure Want To Delete?\")\r\n        const url = baseURL + \"/data/inst/\" + id\r\n        console.log(id)\r\n        const l = async (id) => {\r\n            try {\r\n                const h = await axios.delete(url, { headers: { \"x-auth-token\": userDataf.token } })\r\n                console.log(h)\r\n                getDetails()\r\n                history.push('/superadmin')\r\n            }\r\n            catch (err) {\r\n                err.response.data.msg && setError2(err.response.data.msg)\r\n            }\r\n\r\n        }\r\n        l(id)\r\n    }\r\n    useEffect(() => {\r\n        getDetails()\r\n    }, [values, userDataf])\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target\r\n        setValues(values => ({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n        )\r\n    }\r\n\r\n    const getDetails = async () => {\r\n        try {\r\n            const URL = baseURL + '/data/all'\r\n            const found = await axios.get(URL, { headers: { \"x-auth-token\": userDataf.token } })\r\n            // console.log(found.data)\r\n            setRetValues(() => found.data)\r\n\r\n        } catch (err) {\r\n            err.response.data.msg && setError2(err.response.data.msg)\r\n        }\r\n    }\r\n\r\n    const validate = () => {\r\n        var temp = {}\r\n        temp.instEmail = (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/).test(values.instEmail) ? \"\" : \"Email is not valid\";\r\n        temp.instName = values.instName ? \"\" : \"This feild is required.\"\r\n        temp.instPhone = values.instPhone.length === 10 ? \"\" : \"Phone number is not vaild.\"\r\n        temp.instAddress = values.instAddress ? \"\" : \"This feild is required.\"\r\n        temp.instWebsite = values.instWebsite ? \"\" : \"This feild is required.\"\r\n        temp.instLogo = values.instLogo ? \"\" : \"This feild is required.\"\r\n        temp.instMaxNumber = values.instMaxNumber ? \"\" : \"This feild is required.\"\r\n\r\n        setError({\r\n            ...temp\r\n        })\r\n\r\n        return Object.values(temp).every(x => x===\"\")\r\n    }\r\n    //    instName: \"\",\r\n    //     instEmail: \"\",\r\n    //     instPhone: \"\",\r\n    //     instAddress: \"\",\r\n    //     instWebsite: \"\",\r\n    //     instLogo: \"\",\r\n    //     instSubDate: new Date(),\r\n    //     instMaxNumber: \"\",\r\n    //     instActive: false\r\n\r\n    const onSubmitChange = (e) => {\r\n        e.preventDefault()\r\n        var body = values\r\n       \r\n        // console.log(values)\r\n        const create = async (body) => {\r\n            try {\r\n                const URL = baseURL + '/data/inst'\r\n                body.instPhone = \"+91\"+ body.instPhone\r\n                const newdata = await axios.post(URL, body, { headers: { \"x-auth-token\": userDataf.token } })\r\n                // console.log(newdata)\r\n                setValues(intitalFeildValues);\r\n                history.push('/superadmin');\r\n                setError('')\r\n                setAddOpen(false)\r\n            } catch (err) {\r\n                err.response.data.msg && setError2(err.response.data.msg)\r\n            }\r\n        }\r\n        if(validate()){\r\n            create(body)\r\n        }\r\n       \r\n\r\n    }\r\n    const classes = style();\r\n    return (\r\n        <div>\r\n            <div className={classes.addPaper}  >\r\n                <Button onClick={() => setAddOpen(true)}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    endIcon={<Icon>send</Icon>}\r\n                >Add New Institute</Button>\r\n            </div>\r\n\r\n            <Dialog aria-labelledby=\"form-dialog-title\"\r\n                aria-describedby=\"simple-dialog-description\"\r\n                fullWidth={true}\r\n                maxWidth=\"md\"\r\n                open={addOpen}\r\n                onClose={() => { setAddOpen(false); setValues(intitalFeildValues); setError(intitalFeildValues) }}\r\n                className={classes.modal}\r\n            >\r\n                <InstaCreate {...{ values, setValues,setValues,  errors,error2, setError2, handleChange, onSubmitChange, classes }} />\r\n            </Dialog>\r\n            <Paper>\r\n                <TableContainer component={Paper} className={classes.table}>\r\n                    <Table arial-label='simple table' >\r\n                        <TableHeadOf />\r\n                        <TableBody>\r\n\r\n                            {\r\n                                retValues.map((item, index) => (\r\n                                    <TableRow key={index}>\r\n                                        <TableCell>\r\n                                            <Link to={`/superadmin/view/${item._id}`} className={classes.link}>  <Avatar alt={item.instName} src={item.instLogo} /></Link>\r\n                                        </TableCell>\r\n                                        <TableCell >\r\n                                            <Link to={`/superadmin/view/${item._id}`} className={classes.link}>  {item.instName}</Link>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            <Link to={`/superadmin/view/${item._id}`} className={classes.link}>  {item.instPhone}</Link>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            <Link to={`/superadmin/view/${item._id}`} className={classes.link}> {item.instEmail}</Link>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            <Link to={`/superadmin/view/${item._id}`} className={classes.link}>  {item.instActive ? \"Active\" : \"Deactive\"}</Link>\r\n\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            <IconButton color='primary' onClick={() => history.push(`/superadmin/edit/${item._id}`)}>\r\n                                                <EditIcon />\r\n                                            </IconButton>\r\n                                            <IconButton color='secondary' onClick={() => (deleteHandler(item._id))}>\r\n                                                <DeleteOutlineIcon />\r\n                                            </IconButton>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))\r\n\r\n                            }\r\n                        </TableBody>\r\n\r\n                    </Table>\r\n\r\n                </TableContainer>\r\n            </Paper>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { makeStyles, Paper } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nconst style = makeStyles(() => ({\r\n    paper:{\r\n        padding:'20px',\r\n        marginTop:\"20px\"\r\n    }\r\n}))\r\n\r\nexport default function Home() {\r\n    const classes = style()\r\n    return (\r\n        <div>\r\n            <Paper className={classes.paper}>\r\n                <strong> Home Page</strong>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useContext} from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport UserContext from '../UserContext';\r\nimport Home from './Home'\r\n\r\nexport default function ProtectedRoute({ component: Component, ...rest }) {\r\n    const { userDataf, setUserDataf, loggged, setLogged } = useContext(UserContext);\r\n    return (\r\n         <Route {...rest} render={\r\n            (props) => {\r\n                if (loggged === \"superadmin\") {\r\n                    return <Component {...props} />\r\n                }\r\n\r\n                console.log(loggged)\r\n                return <Redirect to={{\r\n                    pathname: '/'\r\n                }} />\r\n            }\r\n        }\r\n\r\n        />\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport BaseUrl from './BaseUrl';\r\nimport axios from 'axios'\r\nimport UserContext from '../UserContext'\r\nimport {  Grid, makeStyles, Paper,  } from '@material-ui/core'\r\n// import ErrorNotice from './ErrorNotice';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst style = makeStyles(() => ({\r\n    text: {\r\n        padding: '4px',\r\n        marginTop: \"10px\"\r\n    },\r\n    paperInput: {\r\n        padding: '25px',\r\n        margin: '20px',\r\n        width: \"50%\"\r\n    },\r\n    side: {\r\n        paddingLeft: \"20px\"\r\n    },\r\n    button: {\r\n        marginLeft: \"30px\",\r\n        margin: \"10px 0\"\r\n    }, modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }, addPaper: {\r\n        display: 'flex',\r\n        flexDirection: 'row-reverse',\r\n        marginTop: '7px'\r\n    }\r\n}))\r\n\r\nconst intitalFeildValues = {\r\n    instName: \"\",\r\n    instEmail: \"\",\r\n    instPhone: \"\",\r\n    instAddress: \"\",\r\n    instWebsite: \"\",\r\n    instLogo: \"\",\r\n    instSubCat: \"\",\r\n    instCat: \"\",\r\n    instActive: false,\r\n    instSutdentDetails:[]\r\n}\r\nexport default function AdminDashbord({ match }) {\r\n    const classes = style();\r\n\r\n    const { userDataf } = useContext(UserContext);\r\n    const [valuesToEdit, setValuesToEdit] = useState(intitalFeildValues);\r\n    const [error, setError] = useState();\r\n    const history = useHistory();\r\n    const [activeUser,setActiveUser] = useState(0)\r\n\r\n\r\n    useEffect(() => {\r\n        togetdata(match.params.id)\r\n    }, [])\r\n\r\n\r\n    const togetdata = async (id) => {\r\n        const url = BaseUrl + \"/data/Inst/\" + id\r\n        const foundDataTo = await axios.get(url, { headers: { \"x-auth-token\": userDataf.token } })\r\n        console.log(foundDataTo)\r\n        setValuesToEdit(foundDataTo.data)\r\n        foundDataTo.data.instSutdentDetails.map(item => {\r\n            if(item.active){\r\n                setActiveUser(val => val+1)\r\n            }\r\n        })\r\n        \r\n    }\r\n    return (\r\n        <div className={classes.modal}>\r\n            <Paper className={classes.paperInput}>\r\n                <Grid container >\r\n                    <Grid item xs={6}>\r\n                        Total Number of Students\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        {valuesToEdit.instSutdentDetails.length}\r\n\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        Total Number of  Active Students\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        {activeUser}\r\n\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        Total Number Inactive Students\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        {valuesToEdit.instSutdentDetails.length-activeUser}\r\n\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport BaseUrl from './BaseUrl';\r\nimport axios from 'axios'\r\nimport UserContext from '../UserContext'\r\nimport { Button, Grid, makeStyles, Paper, TextField, Typography, } from '@material-ui/core'\r\nimport ErrorNotice from './ErrorNotice';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst style = makeStyles(() => ({\r\n    text: {\r\n        padding: '4px',\r\n        marginTop: \"10px\"\r\n    },\r\n    paperInput: {\r\n        padding: '25px',\r\n        margin: '20px',\r\n    },\r\n    side: {\r\n        paddingLeft: \"20px\"\r\n    },\r\n    button: {\r\n        marginLeft: \"30px\",\r\n        margin: \"10px 0\"\r\n    },modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },addPaper:{\r\n        display:'flex',\r\n        flexDirection:'row-reverse',\r\n        marginTop:'7px'\r\n    }\r\n}))\r\n\r\nconst intitalFeildValues = {\r\n    instName: \"\",\r\n    instEmail: \"\",\r\n    instPhone: \"\",\r\n    instAddress: \"\",\r\n    instWebsite: \"\",\r\n    instLogo: \"\",\r\n    instSubCat: \"\",\r\n    instCat: \"\",\r\n    instActive: Boolean\r\n}\r\nexport default function Institution({match}) {\r\n    const classes = style();\r\n    // console.log(match.params.id)\r\n    const { userDataf} = useContext(UserContext);\r\n    const [valuesToEdit,setValuesToEdit] = useState(intitalFeildValues);\r\n    const [error, setError] = useState();\r\n    const [errors,setErrors] =useState(intitalFeildValues)\r\n    const history = useHistory();\r\n\r\n\r\n    useEffect(() => {\r\n        togetdata(match.params.id)\r\n    },[])\r\n\r\n    \r\n    const togetdata = async (id) => {\r\n        const url = BaseUrl+ \"/data/Inst/\"+id\r\n        const foundDataTo = await axios.get(url,{ headers: { \"x-auth-token\": userDataf.token } })\r\n        console.log(foundDataTo)\r\n        setValuesToEdit(foundDataTo.data)\r\n    }\r\n    \r\n    \r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target\r\n        setValuesToEdit(values => ({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n        )\r\n    }\r\n\r\n    const handleChangeActivate = (e) => {\r\n        console.log(e.target.checked)\r\n        setValuesToEdit(values => ({\r\n            ...values,\r\n            [\"instActive\"]:e.target.checked\r\n        }))\r\n    }\r\n    const validate = () => {\r\n        var temp = {}\r\n        temp.instEmail = (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/).test(valuesToEdit.instEmail) ? \"\" : \"Email is not valid\";\r\n        temp.instName = valuesToEdit.instName ? \"\" : \"This feild is required.\"\r\n        temp.instPhone = valuesToEdit.instPhone.length === 13 ? \"\" : \"Phone number is not vaild.\"\r\n        temp.instAddress = valuesToEdit.instAddress ? \"\" : \"This feild is required.\"\r\n        temp.instWebsite = valuesToEdit.instWebsite ? \"\" : \"This feild is required.\"\r\n        temp.instLogo = valuesToEdit.instLogo ? \"\" : \"This feild is required.\"\r\n        temp.instMaxNumber = valuesToEdit.instMaxNumber ? \"\" : \"This feild is required.\"\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        return Object.values(temp).every(x => x===\"\")\r\n    }\r\n    \r\n\r\n    const onSubmitChange = (e) => {\r\n        e.preventDefault()\r\n        console.log(valuesToEdit._id)\r\n\r\n        const toUpdateInst = async(id,body) => {\r\n            try{\r\n                const url = BaseUrl+ \"/data/inst/\"+id;\r\n                const reply = await axios.put(url,body,{headers:{'x-auth-token':userDataf.token}})\r\n                if(reply) {\r\n                    console.log(reply)\r\n                    history.push('/admin')\r\n\r\n                } \r\n            } catch (err) {\r\n                err.response.data.msg && setError(err.response.data.msg)\r\n            }\r\n        }\r\n        if(validate()){\r\n            toUpdateInst(valuesToEdit._id,valuesToEdit)\r\n        }\r\n       \r\n        \r\n        \r\n\r\n    }\r\n\r\n    console.log(match)\r\n    return (\r\n        <div>\r\n            <Paper className={classes.paperInput}>\r\n                <form>\r\n                    <Typography variant=\"h5\">\r\n                        Edit Institute Details\r\n                        </Typography>\r\n                        {error && <ErrorNotice message={error} clearError={() => setError('')} />}\r\n                    <Grid container>\r\n\r\n                        <Grid item xs={6}>\r\n\r\n                            <TextField\r\n                                name=\"instName\"\r\n                                variant=\"outlined\"\r\n                                label=\"Institute Name\"\r\n                                autoFocus\r\n                                {...(errors.instName && {error:true,helperText:errors.instName})}\r\n                                value={valuesToEdit.instName}\r\n                                onChange={handleChange}\r\n                                className={classes.text}\r\n                                fullWidth />\r\n                            <TextField\r\n                                name=\"instEmail\"\r\n                                variant=\"outlined\"\r\n                                label=\"Email\"\r\n                                value={valuesToEdit.instEmail}\r\n                                onChange={handleChange}\r\n                                {...(errors.instEmail && {error:true,helperText:errors.instEmail})}\r\n                                className={classes.text}\r\n                                fullWidth />\r\n                            <TextField\r\n                                name=\"instPhone\"\r\n                                variant=\"outlined\"\r\n                                label=\"Phone\"\r\n                                value={valuesToEdit.instPhone}\r\n                                onChange={handleChange}\r\n                                {...(errors.instPhone && {error:true,helperText:errors.instPhone})}\r\n                                className={classes.text}\r\n                                fullWidth />\r\n                            <TextField\r\n                                name=\"instAddress\"\r\n                                variant=\"outlined\"\r\n                                label=\"Address\"\r\n                                value={valuesToEdit.instAddress}\r\n                                multiline\r\n                                rows={3}\r\n                                onChange={handleChange}\r\n                                {...(errors.instAddress && {error:true,helperText:errors.instAddress})}\r\n                                className={classes.text}\r\n                                fullWidth />\r\n                        </Grid>\r\n                        <Grid item xs={6} className={classes.side}>\r\n\r\n                            <TextField\r\n                                name=\"instWebsite\"\r\n                                variant=\"outlined\"\r\n                                label=\"Website\"\r\n                                value={valuesToEdit.instWebsite}\r\n                                {...(errors.instWebsite && {error:true,helperText:errors.instWebsite})}\r\n                                onChange={handleChange}\r\n                                className={classes.text}\r\n                                fullWidth />\r\n                            <TextField\r\n                                name=\"instLogo\"\r\n                                variant=\"outlined\"\r\n                                label=\"Logo URL\"\r\n                                value={valuesToEdit.instLogo}\r\n                                {...(errors.instLogo && {error:true,helperText:errors.instLogo})}\r\n                                onChange={handleChange}\r\n                                className={classes.text}\r\n                                fullWidth />\r\n                            <TextField\r\n                                name=\"instCat\"\r\n                                variant=\"outlined\"\r\n                                label=\"Category\"\r\n                                value={valuesToEdit.instCat}\r\n                                {...(errors.instCat && {error:true,helperText:errors.instCat})}\r\n                                onChange={handleChange}\r\n                                className={classes.text}\r\n                                fullWidth />\r\n                                <TextField\r\n                                name=\"instSubCat\"\r\n                                variant=\"outlined\"\r\n                                label=\"Sub Category\"\r\n                                value={valuesToEdit.instSubCat}\r\n                                {...(errors.instSubCat && {error:true,helperText:errors.instSubCat})}\r\n                                onChange={handleChange}\r\n                                className={classes.text}\r\n                                fullWidth />\r\n                            \r\n                            <Button variant=\"contained\" color=\"primary\" className={classes.button} type=\"submit\"\r\n                                onClick={onSubmitChange} >\r\n                                Update\r\n                            </Button>\r\n\r\n\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nimport { Button, Grid, TextField, DialogContent, DialogTitle } from '@material-ui/core';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nexport default function SutdentEdit({ student, classes, handleChange, onSubmitChange, valuesInst, errors, setErrors }) {\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <DialogTitle>\r\n                Student Details\r\n                </DialogTitle>\r\n            <DialogContent>\r\n                <Grid container>\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            \r\n                            name=\"stuName\"\r\n                            variant=\"outlined\"\r\n                            label=\"Student Name\"\r\n                            autoFocus\r\n                            value={student.stuName}\r\n                            onChange={handleChange}\r\n                            {...(errors.stuName && { error: true, helperText: errors.stuName })}\r\n                            className={classes.text}\r\n                            fullWidth />\r\n                        <TextField\r\n                            name=\"stuId\"\r\n                            variant=\"outlined\"\r\n                            label=\"Student Id\"\r\n                            {...(errors.stuId && { error: true, helperText: errors.stuId })}\r\n\r\n                            value={student.stuId}\r\n                            onChange={handleChange}\r\n                            className={classes.text}\r\n                            fullWidth />\r\n                        <TextField\r\n                            name=\"stuEmail\"\r\n                            variant=\"outlined\"\r\n                            label=\"Student Email\"\r\n                            {...(errors.stuEmail && { error: true, helperText: errors.stuEmail })}\r\n\r\n                            value={student.stuEmail}\r\n                            onChange={handleChange}\r\n                            className={classes.text}\r\n                            fullWidth />\r\n                        <TextField\r\n                            name=\"stuPhone\"\r\n                            variant=\"outlined\"\r\n                            label=\"Student Phone Number\"\r\n                            {...(errors.stuPhone && { error: true, helperText: errors.stuPhone })}\r\n\r\n                            value={student.stuPhone}\r\n                            onChange={handleChange}\r\n                            className={classes.text}\r\n                            fullWidth />\r\n\r\n                        <FormControl variant=\"outlined\" className={classes.text} fullWidth\r\n                            {...(errors.stuCat && { error: true })}\r\n                        >\r\n                            <InputLabel id=\"demo-simple-select-outlined-label\">Category</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-outlined-label\"\r\n\r\n                                id=\"demo-simple-select-outlined\"\r\n                                value={student.stuCat}\r\n                                name=\"stuCat\"\r\n                                onChange={handleChange}\r\n                                label=\"Category\"\r\n\r\n                            >\r\n                                {valuesInst.instCat ? (valuesInst.instCat.split(' ').map((item, index) =>\r\n                                    <MenuItem key={index} value={item}>{item}</MenuItem>\r\n                                )) : <MenuItem value={0}>none</MenuItem>\r\n\r\n                                }\r\n\r\n                            </Select>\r\n                            {errors.stuCat && <FormHelperText>\r\n                                {errors.stuCat}\r\n                            </FormHelperText>}\r\n\r\n                        </FormControl>\r\n\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6} className={classes.side}>\r\n                        <FormControl variant=\"outlined\" className={classes.text} fullWidth\r\n                            {...(errors.stuSubCat && { error: true })}\r\n                        >\r\n                            <InputLabel id=\"demo-simple-select-outlined-label\">Sub-Category</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-outlined-label\"\r\n                                \r\n                                id=\"demo-simple-select-outlined\"\r\n                                value={student.stuSubCat}\r\n                                onChange={handleChange}\r\n                                label=\"Sub-Category\"\r\n                                name=\"stuSubCat\"\r\n\r\n                            >\r\n\r\n                                {valuesInst.instSubCat ? (valuesInst.instSubCat.split(' ').map((item, index) =>\r\n                                    <MenuItem key={index} value={item}>{item}</MenuItem>\r\n                                )) : <MenuItem value={0}>none</MenuItem>\r\n\r\n                                }\r\n\r\n\r\n                            </Select>\r\n                            {errors.stuSubCat && <FormHelperText>\r\n                                {errors.stuSubCat}\r\n                            </FormHelperText>}\r\n                        </FormControl>\r\n\r\n                        <TextField\r\n                            name=\"stuParentName\"\r\n                            variant=\"outlined\"\r\n                            label=\"Parent Name\"\r\n                            {...(errors.stuParentName && { error: true, helperText: errors.stuParentName })}\r\n\r\n                            value={student.stuParentName}\r\n                            onChange={handleChange}\r\n                            className={classes.text}\r\n                            fullWidth />\r\n                        <TextField\r\n                            name=\"stuRelation\"\r\n                            variant=\"outlined\"\r\n                            {...(errors.stuRelation && { error: true, helperText: errors.stuRelation })}\r\n                            label=\"RelationShip\"\r\n\r\n                            value={student.stuRelation}\r\n                            onChange={handleChange}\r\n                            className={classes.text}\r\n                            fullWidth />\r\n                        <TextField\r\n                            name=\"stuParentNumber\"\r\n                            variant=\"outlined\"\r\n                            label=\"Parent Phone Number\"\r\n                            {...(errors.stuParentNumber && { error: true, helperText: errors.stuParentNumber })}\r\n\r\n                            value={student.stuParentNumber}\r\n                            onChange={handleChange}\r\n                            className={classes.text}\r\n                            fullWidth />\r\n                        <TextField\r\n                            name=\"stuParentEmail\"\r\n                            variant=\"outlined\"\r\n                            label=\"Parent Email\"\r\n                            {...(errors.stuParentEmail && { error: true, helperText: errors.stuParentEmail })}\r\n\r\n                            value={student.stuParentEmail}\r\n                            onChange={handleChange}\r\n                            className={classes.text}\r\n                            fullWidth />\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                <div className={classes.modal}>\r\n                    <Button className={classes.btn}\r\n                        variant=\"contained\" color=\"primary\" className={classes.button} type=\"submit\"\r\n                        onClick={onSubmitChange} >\r\n                        ADD\r\n                            </Button>\r\n                </div>\r\n\r\n\r\n\r\n\r\n            </DialogContent>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react';\r\n\r\nimport { Button, Grid, TextField, DialogContent, DialogTitle, Dialog, makeStyles, Slide, FormControlLabel, Checkbox } from '@material-ui/core';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport BaseUrl from './BaseUrl';\r\nimport Axios from 'axios';\r\nimport UserContext from '../UserContext';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\nconst initialStudent = {\r\n    stuName: '',\r\n    stuId: '',\r\n    stuEmail: '',\r\n    stuPhone: '',\r\n    stuCat: '',\r\n    stuSubCat: '',\r\n    stuParentName: '',\r\n    stuRelation: '',\r\n    stuParentNumber: '',\r\n    stuParentEmail: '',\r\n    active: false\r\n}\r\n\r\nconst style = makeStyles(() => ({\r\n\r\n\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n\r\n    }, addPaper: {\r\n        display: 'flex',\r\n        flexDirection: 'row-reverse',\r\n        marginTop: '7px'\r\n    },\r\n    paperInput: {\r\n        padding: '15px',\r\n        margin: '20px',\r\n    }, text: {\r\n        padding: '4px',\r\n        marginTop: \"10px\"\r\n    }, side: {\r\n        paddingLeft: \"20px\"\r\n    }, btn: {\r\n        marginBottom: \"10px\"\r\n    }\r\n}))\r\n\r\nexport default function SutdentEdit({ CurrentId, valuesInst, editOpen, setEditOpen }) {\r\n\r\n    const [editStudent, setEditSudent] = useState(initialStudent);\r\n    const { userDataf } = useContext(UserContext);\r\n    const [errors,setErrors] = useState(initialStudent)\r\n\r\n    const classes = style();\r\n\r\n    useEffect(() => {\r\n        toGetStudentDe(CurrentId.id, CurrentId.uid)\r\n    }, [editOpen])\r\n\r\n\r\n    const toGetStudentDe = async (id, uid) => {\r\n        const url = BaseUrl + '/data/st/' + id + '/' + uid\r\n        const val = await Axios.get(url, { headers: { \"x-auth-token\": userDataf.token } })\r\n        console.log(val.data);\r\n        setEditSudent(val.data)\r\n\r\n    }\r\n\r\n    const handleChangedd = (e) => {\r\n        console.log(e.target.checked)\r\n        setEditSudent(values => ({\r\n            ...values,\r\n            ['active']: e.target.checked\r\n        }))\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target\r\n        setEditSudent(values => ({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n        )\r\n    }\r\n    const validate = () => {\r\n        var temp ={}\r\n        temp.stuName = editStudent.stuName ? \"\" : \"This feild is required.\"\r\n        temp.stuEmail = (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/).test(editStudent.stuEmail) ? \"\" : \"Email is not vaild.\"\r\n        temp.stuPhone = editStudent.stuPhone.length===13 ? \"\" : \"Phone number is not valid..\"\r\n        temp.stuCat = editStudent.stuCat.length !== 0 ? \"\" : \"This feild is required.\"\r\n        temp.stuSubCat = editStudent.stuSubCat.length !== 0 ? \"\" : \"This feild is required.\"\r\n        temp.stuParentName = editStudent.stuParentName ? \"\" : \"This feild is required.\"\r\n        temp.stuRelation = editStudent.stuRelation ? \"\" : \"This feild is required.\"\r\n        temp.stuParentNumber = editStudent.stuParentNumber.length===13 ? \"\" : \"Phone number is not valid.\"\r\n        temp.stuParentEmail = (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/).test(editStudent.stuParentEmail) ? \"\" : \"Email is not vaild.\"\r\n        \r\n        setErrors({\r\n            ...temp\r\n        })\r\n    \r\n        return Object.values(temp).every(x => x===\"\")\r\n    \r\n    }\r\n\r\n\r\n\r\n\r\n    const onSubmitChange1 = () => {\r\n\r\n        const l = async () => {\r\n            const url = BaseUrl + '/data/st/' + CurrentId.id + '/' + CurrentId.uid\r\n            const val = await Axios.post(url, editStudent, { headers: { \"x-auth-token\": userDataf.token } })\r\n            setEditSudent(initialStudent)\r\n            setEditOpen(false)\r\n        }\r\nif(validate()){\r\n    l()\r\n}\r\n       \r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog TransitionComponent={Transition}\r\n                keepMounted\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n                open={editOpen}\r\n                onClose={() => setEditOpen(false)}>\r\n                <DialogTitle>\r\n                   Edit Student Details\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Grid container>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                name=\"stuName\"\r\n                                variant=\"outlined\"\r\n                                label=\"Student Name\"\r\n                                autoFocus\r\n                                {...(errors.stuName && { error: true, helperText: errors.stuNam })}\r\n                                value={editStudent.stuName}\r\n                                onChange={handleChange}\r\n                                className={classes.text}\r\n                                fullWidth />\r\n                            <TextField\r\n                                name=\"stuId\"\r\n                                variant=\"outlined\"\r\n                                label=\"Student Id\"\r\n                                {...(errors.stuId && { error: true, helperText: errors.stuId })}\r\n                              \r\n                                value={editStudent.stuId}\r\n                                onChange={handleChange}\r\n                                className={classes.text}\r\n                                fullWidth />\r\n                            <TextField\r\n                                name=\"stuEmail\"\r\n                                variant=\"outlined\"\r\n                                label=\"Student Email\"\r\n                                {...(errors.stuEmail && { error: true, helperText: errors.stuEmail })}\r\n                                value={editStudent.stuEmail}\r\n                                onChange={handleChange}\r\n                                className={classes.text}\r\n                                fullWidth />\r\n                            <TextField\r\n                                name=\"stuPhone\"\r\n                                variant=\"outlined\"\r\n                                label=\"Student Phone Number\"\r\n                                {...(errors.stuPhone && { error: true, helperText: errors.stuPhone })}\r\n                             \r\n                                value={editStudent.stuPhone}\r\n                                onChange={handleChange}\r\n                                className={classes.text}\r\n                                fullWidth />\r\n\r\n                            <FormControl variant=\"outlined\" className={classes.text} fullWidth \r\n                            {...(errors.stuCat && { error: true })}\r\n                            >\r\n                                <InputLabel id=\"demo-simple-select-outlined-label\">Category</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-outlined-label\"\r\n                                    id=\"demo-simple-select-outlined\"\r\n                                    value={editStudent.stuCat}\r\n                                    name=\"stuCat\"\r\n                                    onChange={handleChange}\r\n                                    label=\"Category\"\r\n\r\n                                >\r\n\r\n                                    {valuesInst.instCat? (valuesInst.instCat.split(' ').map((item, index) =>\r\n                                            <MenuItem key={index} value={item}>{item}</MenuItem>\r\n                                        )):<MenuItem  value={0}>none</MenuItem>\r\n\r\n                                       \r\n\r\n                                    }\r\n                                </Select>\r\n                                {errors.stuCat && <FormHelperText>\r\n                                {errors.stuCat}\r\n                            </FormHelperText>}\r\n                            </FormControl>\r\n\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6} className={classes.side}>\r\n                            <FormControl variant=\"outlined\" \r\n                            {...(errors.stuCat && { error: true })}\r\n                            className={classes.text} fullWidth>\r\n                                <InputLabel id=\"demo-simple-select-outlined-label\">Sub-Category</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-outlined-label\"\r\n                                    id=\"demo-simple-select-outlined\"\r\n                                    value={editStudent.stuSubCat}\r\n                                    onChange={handleChange}\r\n                                    label=\"Sub-Category\"\r\n                                    name=\"stuSubCat\"\r\n\r\n                                >\r\n                                    {valuesInst.instSubCat?( valuesInst.instSubCat.split(' ').map((item, index) =>\r\n                                            <MenuItem key={index} value={item}>{item}</MenuItem>\r\n                                        )):<MenuItem  value={0}>none</MenuItem>\r\n\r\n                                    }\r\n\r\n\r\n                                </Select>\r\n                                {errors.stuCat && <FormHelperText>\r\n                                {errors.stuSubCat}\r\n                            </FormHelperText>}\r\n                            </FormControl>\r\n\r\n                            <TextField\r\n                                name=\"stuParentName\"\r\n                                variant=\"outlined\"\r\n                                label=\"Parent Name\"\r\n                                {...(errors.stuParentName && { error: true, helperText: errors.stuParentName })}\r\n                                value={editStudent.stuParentName}\r\n                                onChange={handleChange}\r\n                                className={classes.text}\r\n                                fullWidth />\r\n                            <TextField\r\n                                name=\"stuRelation\"\r\n                                variant=\"outlined\"\r\n                                label=\"RelationShip\"\r\n                                {...(errors.stuRelation && { error: true, helperText: errors.stuRelation })}\r\n                                value={editStudent.stuRelation}\r\n                                onChange={handleChange}\r\n                                className={classes.text}\r\n                                fullWidth />\r\n                            <TextField\r\n                                name=\"stuParentNumber\"\r\n                                variant=\"outlined\"\r\n                                label=\"Parent Phone Number\"\r\n                                {...(errors.stuParentNumber && { error: true, helperText: errors.stuParentNumber })}\r\n                                value={editStudent.stuParentNumber}\r\n                                onChange={handleChange}\r\n                                className={classes.text}\r\n                                fullWidth />\r\n                            <TextField\r\n                                name=\"stuParentEmail\"\r\n                                variant=\"outlined\"\r\n                                label=\"Parent Email\"\r\n                                {...(errors.stuParentEmail && { error: true, helperText: errors.stuParentEmail })}\r\n                                value={editStudent.stuParentEmail}\r\n                                onChange={handleChange}\r\n                                className={classes.text}\r\n                                fullWidth />\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                    <FormControlLabel control={<Checkbox\r\n                        checked={editStudent.active}\r\n                        name=\"active\"\r\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n\r\n                        onChange={handleChangedd} />} label=\"Activate\" />\r\n                    <div className={classes.modal}>\r\n                        <Button className={classes.btn}\r\n                            variant=\"contained\" color=\"primary\" type=\"submit\"\r\n                            onClick={onSubmitChange1} >\r\n                            Edit\r\n                            </Button>\r\n                    </div>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n","\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport BaseUrl from './BaseUrl';\r\nimport axios from 'axios'\r\nimport UserContext from '../UserContext'\r\nimport { Button, Dialog, DialogContent, DialogTitle, IconButton, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Typography, } from '@material-ui/core'\r\nimport ErrorNotice from './ErrorNotice';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport StudentEdit from './SutdentEdit';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport StudentActiveEdit from './StudentActiveEdit';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst style = makeStyles(() => ({\r\n\r\n\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n\r\n    }, addPaper: {\r\n        display: 'flex',\r\n        flexDirection: 'row-reverse',\r\n        marginTop: '7px'\r\n    },\r\n    paperInput: {\r\n        padding: '15px',\r\n        margin: '20px',\r\n    }, text: {\r\n        padding: '4px',\r\n        marginTop: \"10px\"\r\n    }, side: {\r\n        paddingLeft: \"20px\"\r\n    }, btn: {\r\n        marginBottom: \"10px\"\r\n    }\r\n}))\r\n\r\n\r\nconst initialStudent = {\r\n    stuName: '',\r\n    stuId: '',\r\n    stuEmail: '',\r\n    stuPhone: '',\r\n    stuCat: '',\r\n    stuSubCat: '',\r\n    stuParentName: '',\r\n    stuRelation: '',\r\n    stuParentNumber: '',\r\n    stuParentEmail: '',\r\n    active: false\r\n}\r\n\r\nconst initialValues = {\r\n    instName: \"\",\r\n    instEmail: \"\",\r\n    instPhone: \"\",\r\n    instAddress: \"\",\r\n    instWebsite: \"\",\r\n    instLogo: \"\",\r\n    instSubCat: \"\",\r\n    instCat: \"\",\r\n    instActive: false,\r\n    instAdmin: [],\r\n    instSutdentDetails: [],\r\n\r\n}\r\n\r\nexport default function User({ match }) {\r\n    const classes = style();\r\n\r\n    const { userDataf } = useContext(UserContext);\r\n    const [open, setOpen] = useState(false)\r\n    const [valuesInst, setValuesInst] = useState(initialValues);\r\n    const [error, setError] = useState();\r\n    const [errors , setErrors] = useState(initialStudent)\r\n    const history = useHistory();\r\n    const [student, setStudent] = useState(initialStudent);\r\n    const [editOpen, setEditOpen] = useState(false);\r\n    const [CurrentId, setCurrentid] = useState({\r\n        id: 0,\r\n        uid: 0\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        togetdata(match.params.id)\r\n    }, [editOpen])\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target\r\n        setStudent(values => ({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n        )\r\n    }\r\nconst editHandale = (idd) => {\r\n    setCurrentid({\r\n        id: valuesInst._id,\r\n        uid: idd\r\n    })       \r\n    setEditOpen(true);\r\n\r\n}\r\n\r\n\r\nconst validate = () => {\r\n    var temp ={}\r\n    console.log(student)\r\n    temp.stuName = student.stuName ? \"\" : \"This feild is required.\"\r\n    temp.stuId = student.stuId ? \"\" : \"This feild is required.\"\r\n    temp.stuEmail = (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/).test(student.stuEmail) ? \"\" : \"Email is not vaild.\"\r\n    temp.stuPhone = student.stuPhone.length === 10 ? \"\" : \"Phone number is not valid..\"\r\n    temp.stuCat = student.stuCat.length !== 0 ? \"\" : \"This feild is required.\"\r\n    temp.stuSubCat = student.stuSubCat.length > 0 ? \"\" : \"This feild is required.\"\r\n    temp.stuParentName = student.stuParentName ? \"\" : \"This feild is required.\"\r\n    temp.stuRelation = student.stuRelation ? \"\" : \"This feild is required.\"\r\n    temp.stuParentNumber = student.stuParentNumber.length===10 ? \"\" : \"Phone number is not valid.\"\r\n    temp.stuParentEmail = (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/).test(student.stuParentEmail) ? \"\" : \"Email is not vaild.\"\r\n    console.log(temp)\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    return Object.values(temp).every(x => x===\"\")\r\n\r\n}\r\n\r\n    const onSubmitChange = () => {\r\n        // console.log(student)\r\n        // console.log(valuesInst._id)\r\n\r\n        const l = async (id, body) => {\r\n            body.stuPhone = \"+91\"+body.stuPhone\r\n            body.stuParentNumber = \"+91\"+body.stuParentNumber\r\n            const url = BaseUrl + \"/data/af/\" + id\r\n            const j = await axios.post(url, body, { headers: { \"x-auth-token\": userDataf.token } })\r\n            console.log(j)\r\n            setOpen(false)\r\n            setStudent(initialStudent)\r\n\r\n\r\n        }\r\n        if(validate()){\r\n            l(valuesInst._id, student)\r\n        }\r\n      \r\n    }\r\n\r\n    const deleteuser = async(uid) => {\r\n        const result = window.confirm(\"Are You Sure, You Want To Delete\")\r\n        if(result){\r\n        const url = BaseUrl + '/data/st/' + valuesInst._id + '/' + uid\r\n        const val = await axios.delete(url, { headers: { \"x-auth-token\": userDataf.token } })\r\n        togetdata(match.params.id)\r\n    \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    const togetdata = async (id) => {\r\n        if (id){\r\n        const url = BaseUrl + \"/data/Inst/\" + id\r\n        const foundDataTo = await axios.get(url, { headers: { \"x-auth-token\": userDataf.token } })\r\n        console.log(foundDataTo.data)\r\n        setValuesInst(l => foundDataTo.data)}\r\n    }\r\n    return (\r\n        <div>\r\n            <Paper className={classes.paperInput}>\r\n                <div className={classes.addPaper}  >\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.btn}\r\n                        onClick={() => setOpen(true)}\r\n                    >Add New Student</Button>\r\n                </div>\r\n\r\n                <Dialog\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                    open={open}\r\n                    onClose={() => setOpen(false)}>\r\n                    <StudentEdit {...{ student, classes, handleChange, onSubmitChange, valuesInst ,errors,setErrors}} />\r\n                </Dialog>\r\n                <Paper>\r\n\r\n                    <TableContainer>\r\n                        <Table>\r\n                            <TableHead> <TableRow>\r\n                                <TableCell>\r\n                                    Student Name\r\n                        </TableCell>\r\n                                <TableCell align='right'>\r\n                                    Student ID\r\n                        </TableCell>\r\n                                <TableCell align='right'>\r\n                                    Phone Number\r\n                        </TableCell>\r\n                                <TableCell align='right'>\r\n                                    Email\r\n                        </TableCell>\r\n                                <TableCell align='right'>\r\n                                    Category\r\n                        </TableCell>\r\n                                <TableCell align='right'>\r\n                                    Sub-Category\r\n                        </TableCell>\r\n                                <TableCell align='right'>\r\n                                    Active Status\r\n                        </TableCell>\r\n                                <TableCell align='right'>\r\n                                    Actions\r\n                        </TableCell>\r\n                            </TableRow>\r\n\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    valuesInst.instSutdentDetails.map((item, index) => (\r\n                                        <TableRow key={index}>\r\n                                            <TableCell>\r\n                                                {item.stuName}\r\n                                            </TableCell>\r\n                                            <TableCell align='right'>\r\n                                                {item.stuId}\r\n                                            </TableCell>\r\n                                            <TableCell align='right'>\r\n                                                {item.stuPhone}\r\n                                            </TableCell>\r\n                                            <TableCell align='right'>\r\n                                                {item.stuEmail}\r\n                                            </TableCell>\r\n                                            <TableCell align='right'>\r\n                                                {item.stuCat}\r\n                                            </TableCell>\r\n                                            <TableCell align='right'>\r\n                                                {item.stuSubCat}\r\n                                            </TableCell>\r\n                                            <TableCell align='right'>\r\n                                                {item.active ? 'Active' : 'Deactive'}\r\n                                            </TableCell>\r\n                                            <TableCell align='right'>\r\n                                                <IconButton color='primary' onClick={() => editHandale(item._id)} >\r\n                                                    <EditIcon />\r\n                                                </IconButton>\r\n                                            <IconButton color='secondary' onClick={() => deleteuser(item._id)}>\r\n                                                <DeleteOutlineIcon />\r\n                                            </IconButton>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))\r\n                                }\r\n\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                <StudentActiveEdit {...{ CurrentId, valuesInst, editOpen, setEditOpen }} />\r\n            </Paper>\r\n            </Paper>\r\n        </div >\r\n    )\r\n}\r\n","import { Grid,  makeStyles,  Paper, Typography,   } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport {  Route, useHistory } from 'react-router-dom';\r\nimport UserContext from '../UserContext';\r\nimport axios from 'axios';\r\nimport BaseUrl from './BaseUrl';\r\nimport AdminDashbord from './AdminDashbord';\r\nimport Institution from './Institution';\r\nimport User from './User';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nconst styles = makeStyles(() => ({\r\n    paper: {\r\n        marginTop: \"20px\",\r\n        padding: \"20px\",\r\n    },\r\n    item: {\r\n        margin: \"20px\"\r\n    },\r\n    pic: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    }, addPaper: {\r\n        display: 'flex',\r\n        flexDirection: 'row-reverse',\r\n        marginTop: '7px'\r\n    }, editbtn: {\r\n        marginBottom: \"10px\"\r\n    },\r\n    paperInput: {\r\n        padding: '25px',\r\n\r\n    },\r\n    side: {\r\n        paddingLeft: \"20px\"\r\n    },\r\n    text: {\r\n        padding: '4px',\r\n        marginTop: \"10px\"\r\n    },\r\n    root: {\r\n        width: 600,\r\n        margin: \"7px 0\"\r\n    },\r\n}))\r\n\r\nconst intitalFeildValues = {\r\n    instName: \"\",\r\n    instEmail: \"\",\r\n    instPhone: \"\",\r\n    instAddress: \"\",\r\n    instWebsite: \"\",\r\n    instLogo: \"\",\r\n    instSubDate: \"\",\r\n    instMaxNumber: \"\",\r\n    instActive: false,\r\n    instAdmin: []\r\n}\r\nconst intitalAdminValues = {\r\n    adminName: '',\r\n    adminEmail: '',\r\n    adminPhone: '',\r\n    adminUserName: '',\r\n    adminEmplyDes: '',\r\n    adminEmplyId: '',\r\n    adminId: '',\r\n\r\n\r\n}\r\n\r\n\r\nexport default function ViewSuperAdmin({ match }) {\r\n    const classes = styles();\r\n    const { userDataf } = useContext(UserContext);\r\n    const [valuesToView, setValuesToView] = useState(intitalFeildValues);\r\n    const [valuesAdmin, setValuesAdmin] = useState(intitalAdminValues)\r\n    const [error, setError] = useState();\r\n    const history = useHistory();\r\n    const [value, setValue] = React.useState(-1);\r\n    const [isActive,setIsActive] = useState(false)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        togetdata(match.params.id)\r\n    }, [valuesAdmin,value,match.params])\r\n\r\n\r\n    const togetdata = async (id) => {\r\n        const url = BaseUrl + \"/data/get/admin\"\r\n        const foundDataTo = await axios.get(url, { headers: { \"x-auth-token\": userDataf.token } })\r\n        setValuesToView(foundDataTo.data)\r\n        console.log(foundDataTo.data)\r\n        setIsActive(foundDataTo.data.instActive)\r\n    }\r\n\r\n\r\n\r\n    // console.log(valuesToView.instLogo,\"Logo\")\r\n\r\n    // console.log(match.params.id, \"view\")\r\n    return (\r\n        <div>\r\n            {\r\n            isActive?<><Paper className={classes.paper}>\r\n                <Grid container >\r\n                    <Grid item xs={2} className={classes.pic}>\r\n                        <img src={valuesToView.instLogo} style={{'object-fit':'cover'}}\r\n                            width=\"150\" height=\"150\" style={{ borderRadius: \"80px\" }} alt={valuesToView.instName} />\r\n                    </Grid>\r\n                    <Grid item className={classes.item} xs={8} >\r\n                        <Typography variant=\"h2\" >\r\n                            {valuesToView.instName}\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" >\r\n                            {\"Website :  \" + valuesToView.instWebsite}\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" >\r\n                            {\"Phone Number :  \" + valuesToView.instPhone}\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" >\r\n                            {\"Email :  \" + valuesToView.instEmail}\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" >\r\n                            {\"Address :  \" + valuesToView.instAddress}\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" >\r\n                            {\"Subscription End Date :  \" + (valuesToView.instSubDate).slice(0, 10)}\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" >\r\n                            {valuesToView.instActive ? \"Activated\" : \"Deactivated\"}\r\n                        </Typography>\r\n                    </Grid>\r\n                   \r\n                </Grid>\r\n\r\n            </Paper>\r\n            <div className={classes.pic}>\r\n                <BottomNavigation\r\n                    value={value}\r\n                    onChange={(event, newValue) => {\r\n                        setValue(newValue);\r\n                    }}\r\n                    showLabels\r\n                    className={classes.root}\r\n                >\r\n                    <BottomNavigationAction label=\"Dashboard\"\r\n                        icon={<DashboardIcon />} \r\n                        onClick={() => history.push(`/admin/dashboard/${valuesToView._id}`)}\r\n                        />\r\n                    <BottomNavigationAction label=\"Institution\"\r\n                        onClick={() => history.push(`/admin/institution/${valuesToView._id}`)}\r\n                        icon={<SchoolIcon />} />\r\n                    <BottomNavigationAction label=\"User\" icon={<AccountCircleIcon />}\r\n                    onClick={() => history.push(`/admin/user/${valuesToView._id}`)} />\r\n                </BottomNavigation>\r\n            </div>\r\n\r\n            <Route exact path='/admin/dashboard/:id' component={AdminDashbord} />\r\n            <Route exact path='/admin/institution/:id' component={Institution} />\r\n            <Route exact path='/admin/user/:id' component={User} />\r\n        </>:<>\r\n        \r\n        <Paper className={classes.paper}>\r\n            <h2>\r\n                Your Account is Inactive. Please Contact Super Admin \r\n            </h2>\r\n            <h4>\r\n                Mobile Number : +91999999999\r\n            </h4>\r\n\r\n        </Paper>\r\n        \r\n        </>\r\n\r\n        }\r\n        \r\n        \r\n        \r\n        \r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect } from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport UserContext from '../UserContext';\r\nimport Home from './Home'\r\n\r\n\r\nexport default function ProtectedRoute2({ component: Component, ...rest }) {\r\n    const { userDataf, setUserDataf, loggged, setLogged } = useContext(UserContext);\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n                console.log(loggged)\r\n                if (loggged === \"admin\") {\r\n                    return <Component {...props} />\r\n                }\r\n\r\n                return <Redirect to={{\r\n                    pathname: '/'\r\n                }} />\r\n\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport BaseUrl from './BaseUrl';\r\nimport axios from 'axios'\r\nimport UserContext from '../UserContext'\r\nimport { Button, Checkbox, FormControlLabel, Grid, makeStyles, Paper, TextField, Typography, } from '@material-ui/core'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport ErrorNotice from './ErrorNotice';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst style = makeStyles(() => ({\r\n    text: {\r\n        padding: '4px',\r\n        marginTop: \"10px\"\r\n    },\r\n    paperInput: {\r\n        padding: '25px',\r\n        margin: '20px',\r\n        width: \"90%\"\r\n    },\r\n    side: {\r\n        paddingLeft: \"20px\"\r\n    },\r\n    button: {\r\n        marginLeft: \"30px\",\r\n        margin: \"10px 0\"\r\n    }, modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }, addPaper: {\r\n        display: 'flex',\r\n        flexDirection: 'row-reverse',\r\n        marginTop: '7px'\r\n    }\r\n}))\r\n\r\nconst intitalFeildValues = {\r\n    instName: \"\",\r\n    instEmail: \"\",\r\n    instPhone: \"\",\r\n    instAddress: \"\",\r\n    instWebsite: \"\",\r\n    instLogo: \"\",\r\n    instSubDate: new Date(),\r\n    instMaxNumber: \"\",\r\n    instActive: false\r\n}\r\n\r\nexport default function EditSuperAdmin({ match }) {\r\n    const classes = style();\r\n    // console.log(match.params.id)\r\n    const { userDataf } = useContext(UserContext);\r\n    const [valuesToEdit, setValuesToEdit] = useState(intitalFeildValues);\r\n    const [error, setError] = useState();\r\n    const history = useHistory();\r\n    const [errors, setErrors] = useState(intitalFeildValues)\r\n\r\n\r\n    useEffect(() => {\r\n        togetdata(match.params.id)\r\n    }, [])\r\n\r\n\r\n    const togetdata = async (id) => {\r\n        const url = BaseUrl + \"/data/Inst/\" + id\r\n        const foundDataTo = await axios.get(url, { headers: { \"x-auth-token\": userDataf.token } })\r\n        console.log(foundDataTo)\r\n        setValuesToEdit(foundDataTo.data)\r\n    }\r\n    const validate = () => {\r\n        var temp = {}\r\n        temp.instEmail = (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/).test(valuesToEdit.instEmail) ? \"\" : \"Email is not valid\";\r\n        temp.instName = valuesToEdit.instName ? \"\" : \"This feild is required.\"\r\n        temp.instPhone = valuesToEdit.instPhone.length === 13 ? \"\" : \"Phone number is not vaild.\"\r\n        temp.instAddress = valuesToEdit.instAddress ? \"\" : \"This feild is required.\"\r\n        temp.instWebsite = valuesToEdit.instWebsite ? \"\" : \"This feild is required.\"\r\n        temp.instLogo = valuesToEdit.instLogo ? \"\" : \"This feild is required.\"\r\n        temp.instMaxNumber = valuesToEdit.instMaxNumber ? \"\" : \"This feild is required.\"\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target\r\n        setValuesToEdit(values => ({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n        )\r\n    }\r\n\r\n    const handleChangeActivate = (e) => {\r\n        // console.log(e.target.checked)\r\n        setValuesToEdit(values => ({\r\n            ...values,\r\n            [\"instActive\"]: e.target.checked\r\n        }))\r\n    }\r\n\r\n\r\n\r\n    const onSubmitChange = (e) => {\r\n        e.preventDefault()\r\n        console.log(valuesToEdit._id)\r\n\r\n        const toUpdateInst = async (id, body) => {\r\n            try {\r\n                const url = BaseUrl + \"/data/inst/\" + id;\r\n                const reply = await axios.put(url, body, { headers: { 'x-auth-token': userDataf.token } })\r\n                if (reply) {\r\n                    console.log(reply)\r\n                    history.push('/superadmin')\r\n\r\n                }\r\n            } catch (err) {\r\n                err.response.data.msg && setError(err.response.data.msg)\r\n            }\r\n        }\r\n        if (validate()) {\r\n            toUpdateInst(valuesToEdit._id, valuesToEdit)\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.paperInput}>\r\n                <form>\r\n                    <Typography variant=\"h5\">\r\n                        Edit Institute Details\r\n                        </Typography>\r\n                    {error && <ErrorNotice message={error} clearError={() => setError('')} />}\r\n                    <Grid container>\r\n\r\n                        <Grid item xs={6}>\r\n\r\n                            <TextField\r\n                                name=\"instName\"\r\n                                variant=\"outlined\"\r\n                                label=\"Institute Name\"\r\n                                autoFocus\r\n                                value={valuesToEdit.instName}\r\n                                {...(errors.instName && { error: true, helperText: errors.instName })}\r\n                                onChange={handleChange}\r\n                                className={classes.text}\r\n                                fullWidth />\r\n                            <TextField\r\n                                name=\"instEmail\"\r\n                                variant=\"outlined\"\r\n                                label=\"Email\"\r\n                                value={valuesToEdit.instEmail}\r\n                                onChange={handleChange}\r\n                                className={classes.text}\r\n                                {...(errors.instEmail && { error: true, helperText: errors.instEmail })}\r\n                                fullWidth />\r\n                            <TextField\r\n                                name=\"instPhone\"\r\n                                variant=\"outlined\"\r\n                                label=\"Phone\"\r\n                                value={valuesToEdit.instPhone}\r\n                                onChange={handleChange}\r\n                                className={classes.text}\r\n                                {...(errors.instPhone && { error: true, helperText: errors.instPhone })}\r\n                                fullWidth />\r\n                            <TextField\r\n                                name=\"instAddress\"\r\n                                variant=\"outlined\"\r\n                                label=\"Address\"\r\n                                value={valuesToEdit.instAddress}\r\n                                multiline\r\n                                rows={3}\r\n                                {...(errors.instAddress && { error: true, helperText: errors.instAddress })}\r\n                                onChange={handleChange}\r\n                                className={classes.text}\r\n                                fullWidth />\r\n                        </Grid>\r\n                        <Grid item xs={6} className={classes.side}>\r\n\r\n                            <TextField\r\n                                name=\"instWebsite\"\r\n                                variant=\"outlined\"\r\n                                label=\"Website\"\r\n                                value={valuesToEdit.instWebsite}\r\n                                {...(errors.instWebsite && { error: true, helperText: errors.instWebsite })}\r\n                                onChange={handleChange}\r\n                                className={classes.text}\r\n                                fullWidth />\r\n                            <TextField\r\n                                name=\"instLogo\"\r\n                                variant=\"outlined\"\r\n                                label=\"Logo URL\"\r\n                                value={valuesToEdit.instLogo}\r\n                                onChange={handleChange}\r\n                                {...(errors.instLogo && { error: true, helperText: errors.instLogo })}\r\n                                className={classes.text}\r\n                                fullWidth />\r\n                            <TextField\r\n                                name=\"instMaxNumber\"\r\n                                variant=\"outlined\"\r\n                                label=\"Max Number\"\r\n                                value={valuesToEdit.instMaxNumber}\r\n                                onChange={handleChange}\r\n                                {...(errors.instMaxNumber && { error: true, helperText: errors.instMaxNumber })}\r\n                                className={classes.text}\r\n                                fullWidth />\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\r\n                                <KeyboardDatePicker\r\n                                    disableToolbar\r\n                                    className={classes.text}\r\n                                    variant=\"inline\"\r\n                                    name=\"instSubDate\"\r\n                                    format=\"MM/dd/yyyy\"\r\n                                    inputVariant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    value={valuesToEdit.instSubDate}\r\n                                    label=\"Subscription End Date\"\r\n                                    fullWidth\r\n                                    size=\"small\"\r\n                                    onChange={handleChange}\r\n                                    // value={selectedDate}\r\n                                    // onChange={handleDateChange}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change date',\r\n                                    }}\r\n                                />\r\n                                <FormControlLabel control={<Checkbox\r\n                                    checked={valuesToEdit.instActive}\r\n                                    name=\"instActive\"\r\n                                    inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                    onChange={handleChangeActivate} />} label=\"Activate\" />\r\n\r\n                            </MuiPickersUtilsProvider>\r\n                            <Button variant=\"contained\" color=\"primary\" className={classes.button} type=\"submit\"\r\n                                onClick={onSubmitChange} >\r\n                                Update\r\n                            </Button>\r\n\r\n\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { Button, Dialog, Grid, Icon, makeStyles, Paper, Typography, TextField, TableContainer, TableHead, TableBody, TableRow, TableCell, Table, IconButton } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport UserContext from '../UserContext';\r\nimport axios from 'axios';\r\nimport BaseUrl from './BaseUrl';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\nconst styles = makeStyles(() => ({\r\n    paper: {\r\n        marginTop: \"20px\",\r\n        padding: \"20px\",\r\n    },\r\n    item: {\r\n        margin: \"20px\"\r\n    },\r\n    pic: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    }, addPaper: {\r\n        display: 'flex',\r\n        flexDirection: 'row-reverse',\r\n        marginTop: '7px'\r\n    }, editbtn: {\r\n        marginBottom: \"10px\"\r\n    },\r\n    paperInput: {\r\n        padding: '25px',\r\n\r\n    },\r\n    side: {\r\n        paddingLeft: \"20px\"\r\n    },\r\n    text: {\r\n        padding: '4px',\r\n        marginTop: \"10px\"\r\n    },\r\n}))\r\n\r\nconst intitalFeildValues = {\r\n    instName: \"\",\r\n    instEmail: \"\",\r\n    instPhone: \"\",\r\n    instAddress: \"\",\r\n    instWebsite: \"\",\r\n    instLogo: \"\",\r\n    instSubDate: \"\",\r\n    instMaxNumber: \"\",\r\n    instActive: false,\r\n    instAdmin: []\r\n}\r\nconst intitalAdminValues = {\r\n    adminName: '',\r\n    adminEmail: '',\r\n    adminPhone: '',\r\n    adminUserName: '',\r\n    adminEmplyDes: '',\r\n    adminEmplyId: '',\r\n    adminId: '',\r\n\r\n\r\n}\r\n\r\n\r\nexport default function ViewSuperAdmin({ match }) {\r\n    const classes = styles();\r\n    const { userDataf } = useContext(UserContext);\r\n    const [valuesToView, setValuesToView] = useState(intitalFeildValues);\r\n    const [addAdminOpen, setAddAdminOpen] = useState(false);\r\n    const [valuesAdmin, setValuesAdmin] = useState(intitalAdminValues)\r\n    const [errors, setErrors] = useState(intitalAdminValues);\r\n    const [errors2, setErrors2] = useState();\r\n    const history = useHistory();\r\n    const [adminConPassword, setAdminConPassword] = useState('')\r\n    const [adminPassword, setAdminPassword] = useState('')\r\n    const [con, setCon] = useState(false)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        togetdata(match.params.id)\r\n    }, [addAdminOpen, valuesAdmin, con])\r\n\r\n\r\n    const togetdata = async (id) => {\r\n        const url = BaseUrl + \"/data/Inst/\" + id\r\n        const foundDataTo = await axios.get(url, { headers: { \"x-auth-token\": userDataf.token } })\r\n        console.log(foundDataTo.data)\r\n        setValuesToView(foundDataTo.data)\r\n        console.log((foundDataTo.data.instSubDate).slice(0, 10))\r\n\r\n    }\r\n    const handleChangeadmin = (e) => {\r\n        const { name, value } = e.target\r\n        setValuesAdmin(values => ({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n        )\r\n    }\r\n    const handleChangeCon = (e) => {\r\n        setAdminConPassword(e.target.value)\r\n    }\r\n    const handleChangePwd = (e) => {\r\n        setAdminPassword(e.target.value)\r\n    }\r\n\r\n    const deleteHandler = (id) => {\r\n        const result = window.confirm(\"Are You Sure Want To Delete?\")\r\n        if (result) {\r\n            const url = BaseUrl + \"/data/inst/\" + id\r\n            console.log(id)\r\n            const l = async (id) => {\r\n                try {\r\n                    const h = await axios.delete(url, { headers: { \"x-auth-token\": userDataf.token } })\r\n                    console.log(h)\r\n                    history.push('/superadmin')\r\n                }\r\n                catch (err) {\r\n                    err.response.data.msg && setErrors2(err.response.data.msg)\r\n                }\r\n\r\n            }\r\n            l(id)\r\n        }\r\n    }\r\n\r\n    const deleteHandlerAdmin = (id) => {\r\n        const result = window.confirm(\"Are You Sure Want To Delete?\");\r\n        if (result) {\r\n            const url = BaseUrl + '/data/admin/' + match.params.id + \"/\" + id;\r\n            const l = async () => {\r\n                try {\r\n                    const h = await axios.delete(url, { headers: { \"x-auth-token\": userDataf.token } })\r\n                    console.log(h)\r\n                    history.push('/superadmin/view/' + match.params.id)\r\n                    setCon(d => !d)\r\n                }\r\n                catch (err) {\r\n                    err.response.data.msg && setErrors2(err.response.data.msg)\r\n                }\r\n\r\n            }\r\n            l()\r\n        }\r\n\r\n    }\r\n    const validate = () => {\r\n        var temp = {}\r\n        temp.adminName = valuesAdmin.adminName ? \"\" : \"This feild is required.\"\r\n        temp.adminEmail = (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/).test(valuesAdmin.adminEmail) ? \"\" : \"Email is not valid.\"\r\n        temp.adminPhone = valuesAdmin.adminPhone.length === 10 ? \"\" : \"Phone number is not valid.\"\r\n        temp.adminUserName = valuesAdmin.adminUserName.length>3 ? \"\" : \"Username must be 4 character long.\"\r\n        temp.adminEmplyDes = valuesAdmin.adminEmplyDes ? \"\" : \"This feild is required.\"\r\n        temp.adminEmplyId = valuesAdmin.adminEmplyId ? \"\" : \"This feild is required.\"\r\n  \r\n        temp.adminPassword = adminPassword.length>7 ? \"\" : \"Password must be 8 character long.\"\r\n        temp.adminConPassword =adminConPassword ? \"\" : \"This feild is required.\"\r\n        temp.adminConPassword = adminPassword === adminConPassword ? \"\" : \"Password did not match.\"\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x==='')\r\n\r\n    }\r\n    \r\n\r\n\r\n    const submitAdmin = (e) => {\r\n        e.preventDefault()\r\n        const RegId = async () => {\r\n            console.log(\"came here\")\r\n            const refUrl = BaseUrl + '/user/register';\r\n            const upUrl = BaseUrl + \"/data/admin/add/\" + match.params.id;\r\n            const body = {\r\n                userName: valuesAdmin.adminUserName,\r\n                password: adminPassword\r\n            }\r\n\r\n\r\n            const resp = await axios.post(refUrl, body, { headers: { \"x-auth-token\": userDataf.token } })\r\n            setValuesAdmin(values => ({\r\n                ...values,\r\n                [\"adminId\"]: resp.data._id\r\n            }))\r\n            var body2 = { ...valuesAdmin };\r\n            body2.adminId = resp.data._id;\r\n            body2.adminPhone = \"+91\" + body2.adminPhone\r\n            // console.log(resp.data._id)\r\n            // console.log(body2)\r\n            const updaadmin = await axios.post(upUrl, body2, { headers: { \"x-auth-token\": userDataf.token } })\r\n            setValuesAdmin(intitalAdminValues)\r\n            setAddAdminOpen(false)\r\n            setAdminPassword('')\r\n            setAdminConPassword('')\r\n            // console.log(updaadmin)\r\n        }\r\n        if (validate()) {\r\n            console.log(\"paassed\")\r\n            RegId()\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    // console.log(valuesToView.instLogo,\"Logo\")\r\n\r\n    // console.log(match.params.id, \"view\")\r\n    return (\r\n        <div>\r\n            <Paper className={classes.paper}>\r\n                <Grid container >\r\n                    <Grid item xs={2} className={classes.pic}>\r\n                        <img src={valuesToView.instLogo}\r\n                            width=\"150\" height=\"150\" style={{ borderRadius: \"80px\" }} alt={valuesToView.instName} />\r\n                    </Grid>\r\n                    <Grid item className={classes.item} xs={8} >\r\n                        <Typography variant=\"h2\" >\r\n                            {valuesToView.instName}\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" >\r\n                            {\"Website :  \" + valuesToView.instWebsite}\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" >\r\n                            {\"Phone Number :  \" + valuesToView.instPhone}\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" >\r\n                            {\"Email :  \" + valuesToView.instEmail}\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" >\r\n                            {\"Address :  \" + valuesToView.instAddress}\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" >\r\n                            {\"Subscription End Date :  \" + (valuesToView.instSubDate).slice(0, 10)}\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" >\r\n                            {valuesToView.instActive ? \"Activate\" : \"Deactivate\"}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={1} className={classes.pic}>\r\n                        <div className={classes.btnG}>\r\n\r\n                            <Button variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.editbtn}\r\n                                onClick={() => history.push(`/superadmin/edit/${valuesToView._id}`)}\r\n                            >Edit</Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                onClick={() => (deleteHandler(valuesToView._id))}\r\n                            >Delete</Button>\r\n                        </div>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Paper>\r\n            <Paper className={classes.paper} >\r\n                <Dialog aria-labelledby=\"form-dialog-title\"\r\n                    aria-describedby=\"simple-dialog-description\"\r\n                    fullWidth={true}\r\n                    maxWidth=\"md\"\r\n                    open={addAdminOpen}\r\n                    onClose={() => { setAddAdminOpen(false); setValuesAdmin(intitalAdminValues); setErrors('') }}\r\n                    className={classes.pic}\r\n                >\r\n                    <Paper className={classes.paperInput}>\r\n                        <form>\r\n                            <Typography variant=\"h5\">\r\n                                Add New Admin\r\n                        </Typography>\r\n                            <Grid container >\r\n                                <Grid item xs={6}>\r\n                                    <TextField\r\n                                        name=\"adminName\"\r\n                                        variant=\"outlined\"\r\n                                        label=\"Full Name\"\r\n                                        value={valuesAdmin.adminName}\r\n                                        onChange={handleChangeadmin}\r\n                                        className={classes.text}\r\n                                        required\r\n                                        {...(errors.adminName && {error:true,helperText:errors.adminName})}\r\n\r\n                                        fullWidth />\r\n                                    <TextField\r\n                                        name=\"adminPhone\"\r\n                                        variant=\"outlined\"\r\n                                        label=\"Phone\"\r\n                                        value={valuesAdmin.adminPhone}\r\n                                        onChange={handleChangeadmin}\r\n                                        className={classes.text}\r\n                                        required\r\n                                        {...(errors.adminPhone && {error:true,helperText:errors.adminPhone})}\r\n                                        fullWidth />\r\n                                    <TextField\r\n                                        name=\"adminEmail\"\r\n                                        variant=\"outlined\"\r\n                                        label=\"Email\"\r\n                                        value={valuesAdmin.adminEmail}\r\n                                        onChange={handleChangeadmin}\r\n                                        className={classes.text}\r\n                                        required\r\n                                        {...(errors.adminEmail && {error:true,helperText:errors.adminEmail})}\r\n                                        fullWidth />\r\n                                    <TextField\r\n                                        name=\"adminEmplyId\"\r\n                                        variant=\"outlined\"\r\n                                        label=\"Employee ID\"\r\n                                        value={valuesAdmin.adminEmplyId}\r\n                                        onChange={handleChangeadmin}\r\n                                        className={classes.text}\r\n                                        required\r\n                                        {...(errors.adminEmplyId && {error:true,helperText:errors.adminEmplyId})}\r\n                                        fullWidth />\r\n\r\n\r\n\r\n                                </Grid>\r\n                                <Grid item xs={6} className={classes.side}>\r\n                                    <TextField\r\n                                        name=\"adminEmplyDes\"\r\n                                        variant=\"outlined\"\r\n                                        label=\"Employee Designation\"\r\n                                        value={valuesAdmin.adminEmplyDes}\r\n                                        onChange={handleChangeadmin}\r\n                                        className={classes.text}\r\n                                        required\r\n                                        {...(errors.adminEmplyDes && {error:true,helperText:errors.adminEmplyDes})}\r\n                                        fullWidth />\r\n                                    <TextField\r\n                                        name=\"adminUserName\"\r\n                                        variant=\"outlined\"\r\n                                        label=\"Username\"\r\n                                        value={valuesAdmin.adminUserName}\r\n                                        onChange={handleChangeadmin}\r\n                                        className={classes.text}\r\n                                        required\r\n                                        {...(errors.adminUserName && {error:true,helperText:errors.adminUserName})}\r\n                                        fullWidth />\r\n                                    <TextField\r\n                                        name=\"adminPassword\"\r\n                                        variant=\"outlined\"\r\n                                        label=\"Password\"\r\n                                        type=\"password\"\r\n                                        value={adminPassword}\r\n                                        onChange={handleChangePwd}\r\n                                        className={classes.text}\r\n                                        required\r\n                                        {...(errors.adminPassword && {error:true,helperText:errors.adminPassword})}\r\n                                        fullWidth />\r\n                                    <TextField\r\n                                        name=\"adminConPassword\"\r\n                                        variant=\"outlined\"\r\n                                        label=\"Confirm Password\"\r\n                                        type=\"password\"\r\n                                        value={adminConPassword}\r\n                                        onChange={handleChangeCon}\r\n                                        className={classes.text}\r\n                                        required\r\n                                        {...(errors.adminConPassword && {error:true,helperText:errors.adminConPassword})}\r\n                                        fullWidth />\r\n\r\n\r\n                                </Grid>\r\n                                <Grid item xs={12} className={classes.pic}>\r\n                                    <Button className={classes.text}\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size=\"large\"\r\n                                        onClick={submitAdmin}\r\n                                    >\r\n                                        Save\r\n                                        </Button>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n\r\n                        </form>\r\n                    </Paper>\r\n                </Dialog>\r\n\r\n\r\n                <div className={classes.addPaper}  >\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => setAddAdminOpen(true)}\r\n                        className={classes.button}\r\n                        endIcon={<Icon>send</Icon>}\r\n                    >Add New Admin</Button>\r\n                </div>\r\n                <TableContainer component={Paper} xs={12}>\r\n                    <Table arial-label='simple table'>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    Name\r\n    </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    Username\r\n    </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    Email\r\n    </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    Phone\r\n    </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    Employee Id\r\n    </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    Employee Designation\r\n    </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    Action\r\n    </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {valuesToView.instAdmin.map((item, index) => (\r\n                                <TableRow key={item._id}>\r\n                                    <TableCell>\r\n                                        {item.adminName}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        {item.adminUserName}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        {item.adminEmail}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        {item.adminPhone}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        {item.adminEmplyId}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        {item.adminEmplyDes}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        <IconButton color='primary' onClick={() => history.push(`/suadmin/edit/${match.params.id}/${item._id}`)}>\r\n                                            <EditIcon />\r\n                                        </IconButton>\r\n                                        <IconButton color='secondary' onClick={() => (deleteHandlerAdmin(item._id))}>\r\n                                            <DeleteOutlineIcon />\r\n                                        </IconButton>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                            }\r\n\r\n\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n\r\n            </Paper>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { Button, Grid, makeStyles, Paper, TextField, Typography} from '@material-ui/core'\r\nimport Axios from 'axios';\r\nimport React,{useContext,useEffect,useState} from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport UserContext from '../UserContext';\r\nimport BaseUrl from './BaseUrl';\r\n\r\n\r\nconst style = makeStyles(() => ({\r\n    text: {\r\n        padding: '4px',\r\n        marginTop: \"10px\"\r\n    },\r\n    paperInput: {\r\n        padding: '25px',\r\n        margin: '20px',\r\n        width: \"90%\"\r\n    },\r\n    side: {\r\n        paddingLeft: \"20px\"\r\n    },\r\n    button: {\r\n        marginLeft: \"30px\",\r\n        margin: \"10px 0\"\r\n    },modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },addPaper:{\r\n        display:'flex',\r\n        flexDirection:'row-reverse',\r\n        marginTop:'7px'\r\n    }\r\n}))\r\n\r\n\r\nconst intitalAdminValues = {\r\n    adminName: '',\r\n    adminEmail: '',\r\n    adminPhone: '',\r\n    adminUserName: '',\r\n    adminEmplyDes: '',\r\n    adminEmplyId: '',\r\n    adminId: '',\r\n}\r\n\r\n\r\nexport default function EditAdmin({match}) {\r\n    console.log(match)\r\n    const history = useHistory();\r\n    const { userDataf} = useContext(UserContext);\r\n    const [valuesToEdit,setValuesToEdit] = useState(intitalAdminValues);\r\n    const [error, setError] = useState();\r\n    const [errors,setErrors] = useState(intitalAdminValues)\r\n\r\nuseEffect(() => {\r\n    getAdminDetails(match.params.id,match.params.uid)\r\n},[])\r\n\r\nconst getAdminDetails = async (id,uid) => {\r\n    const url = BaseUrl + '/data/admin/'+id+\"/\"+uid\r\n    const foundAdmin = await Axios.get(url,{headers:{'x-auth-token':userDataf.token}})\r\n    console.log(foundAdmin,\"found Admin\")\r\n    setValuesToEdit(foundAdmin.data)\r\n}\r\n\r\n\r\nconst EditAdmin = (e) => {\r\n    e.preventDefault()\r\n    console.log(valuesToEdit)\r\n    const submitEdit = async (id,uid) => {\r\n        const url = BaseUrl + '/data/admin/'+id+\"/\"+uid\r\n        const foundEdited = await Axios.post(url,valuesToEdit,{headers:{'x-auth-token':userDataf.token}})\r\n    console.log(foundEdited)\r\n    history.push('/superadmin/view/'+id)\r\n\r\n    }\r\n    if(validate()){\r\n        submitEdit(match.params.id,match.params.uid)\r\n    }\r\n    \r\n\r\n}\r\n\r\nconst validate = () => {\r\n    var temp ={}\r\n    temp.adminName = valuesToEdit.adminName ? \"\" : \"This feild is required.\"\r\n        temp.adminEmail = (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/).test(valuesToEdit.adminEmail) ? \"\" : \"Email is not valid.\"\r\n        temp.adminPhone = valuesToEdit.adminPhone.length === 13 ? \"\" : \"Phone number is not valid.\"\r\n        temp.adminEmplyDes = valuesToEdit.adminEmplyDes ? \"\" : \"This feild is required.\"\r\n        temp.adminEmplyId = valuesToEdit.adminEmplyId ? \"\" : \"This feild is required.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x==='')\r\n\r\n}\r\n\r\nconst handleChangeadmin = (e) => {\r\n    console.log(e)\r\n    const {name,value} = e.target\r\n    setValuesToEdit(values => ({\r\n        ...values,\r\n        [name]:value}\r\n    ))\r\n}\r\n\r\n    const classes = style()\r\n    return (\r\n        <div><Paper className={classes.paperInput} >\r\n            <form>\r\n            <Typography variant=\"h5\">\r\n                        Edit Admin Details\r\n                        </Typography>\r\n                        <Grid container >\r\n                                <Grid item xs={6}>\r\n                                <TextField\r\n                                        name=\"adminUserName\"\r\n                                        variant=\"outlined\"\r\n                                        label=\"Username\"\r\n                                        value={valuesToEdit.adminUserName}\r\n                                        disabled\r\n                                        className={classes.text}\r\n                                        required\r\n                                        fullWidth />\r\n                                    <TextField\r\n                                        name=\"adminName\"\r\n                                        variant=\"outlined\"\r\n                                        label=\"Full Name\"\r\n                                        {...(errors.adminName && {error:true,helperText:errors.adminName})}\r\n                                        value={valuesToEdit.adminName}\r\n                                        onChange={handleChangeadmin}\r\n                                        className={classes.text}\r\n                                        required\r\n                                        fullWidth />\r\n                                    <TextField\r\n                                        name=\"adminPhone\"\r\n                                        variant=\"outlined\"\r\n                                        label=\"Phone\"\r\n                                        {...(errors.adminPhone && {error:true,helperText:errors.adminPhone})}\r\n                                        value={valuesToEdit.adminPhone}\r\n                                        onChange={handleChangeadmin}\r\n                                        className={classes.text}\r\n                                        required\r\n                                        fullWidth />\r\n     \r\n                                </Grid>\r\n                                <Grid item xs={6} className={classes.side}>\r\n                                <TextField\r\n                                        name=\"adminEmail\"\r\n                                        variant=\"outlined\"\r\n                                        label=\"Email\"\r\n                                        value={valuesToEdit.adminEmail}\r\n                                        onChange={handleChangeadmin}\r\n                                        {...(errors.adminEmail && {error:true,helperText:errors.adminEmail})}\r\n                                        className={classes.text}\r\n                                        required\r\n                                        fullWidth />\r\n                                <TextField\r\n                                        name=\"adminEmplyId\"\r\n                                        variant=\"outlined\"\r\n                                        label=\"Employee ID\"\r\n                                        value={valuesToEdit.adminEmplyId}\r\n                                        {...(errors.adminEmplyId && {error:true,helperText:errors.adminEmplyId})}\r\n                                        onChange={handleChangeadmin}\r\n                                        className={classes.text}\r\n                                        required\r\n                                        fullWidth />\r\n                                    <TextField\r\n                                        name=\"adminEmplyDes\"\r\n                                        variant=\"outlined\"\r\n                                        label=\"Employee Designation\"\r\n                                        value={valuesToEdit.adminEmplyDes}\r\n                                        {...(errors.adminEmplyDes && {error:true,helperText:errors.adminEmplyDes})}\r\n                                        onChange={handleChangeadmin}\r\n                                        className={classes.text}\r\n                                        required\r\n                                        fullWidth />\r\n\r\n                                </Grid>\r\n                                <Grid item xs={12} className={classes.pic}>\r\n                                    <Button className={classes.text}\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size=\"large\"\r\n                                        onClick={EditAdmin}\r\n                                    >\r\n                                        Save\r\n                                        </Button>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n            </form>\r\n        </Paper>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport BaseUrl from './BaseUrl';\r\nimport axios from 'axios'\r\nimport UserContext from '../UserContext'\r\nimport { Button, Checkbox, FormControlLabel, Grid, makeStyles, Paper, TextField, Typography, } from '@material-ui/core'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport ErrorNotice from './ErrorNotice';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst style = makeStyles(() => ({\r\n    text: {\r\n        padding: '4px',\r\n        marginTop: \"10px\"\r\n    },\r\n    paperInput: {\r\n        padding: '25px',\r\n        margin: '20px',\r\n        width: \"90%\"\r\n    },\r\n    side: {\r\n        paddingLeft: \"20px\"\r\n    },\r\n    button: {\r\n        marginLeft: \"30px\",\r\n        margin: \"10px 0\"\r\n    },modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },addPaper:{\r\n        display:'flex',\r\n        flexDirection:'row-reverse',\r\n        marginTop:'7px'\r\n    }\r\n}))\r\n\r\nconst intitalFeildValues = {\r\n    instName: \"\",\r\n    instEmail: \"\",\r\n    instPhone: \"\",\r\n    instAddress: \"\",\r\n    instWebsite: \"\",\r\n    instLogo: \"\",\r\n    instSubDate: new Date(),\r\n    instMaxNumber: \"\",\r\n    instActive: Boolean\r\n}\r\n\r\nexport default function EditSuperAdmin({match}) {\r\n    const classes = style();\r\n    // console.log(match.params.id)\r\n    const { userDataf} = useContext(UserContext);\r\n    const [valuesToEdit,setValuesToEdit] = useState(intitalFeildValues);\r\n    const [error, setError] = useState();\r\n    const history = useHistory();\r\n\r\n\r\n    useEffect(() => {\r\n        togetdata(match.params.id)\r\n    },[])\r\n\r\n    \r\n    const togetdata = async (id) => {\r\n        const url = BaseUrl+ \"/data/Inst/\"+id\r\n        const foundDataTo = await axios.get(url,{ headers: { \"x-auth-token\": userDataf.token } })\r\n        console.log(foundDataTo)\r\n        setValuesToEdit(foundDataTo.data)\r\n    }\r\n    \r\n    \r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target\r\n        setValuesToEdit(values => ({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n        )\r\n    }\r\n\r\n    const handleChangeActivate = (e) => {\r\n        console.log(e.target.checked)\r\n        setValuesToEdit(values => ({\r\n            ...values,\r\n            [\"instActive\"]:e.target.checked\r\n        }))\r\n    }\r\n\r\n    \r\n\r\n    const onSubmitChange = (e) => {\r\n        e.preventDefault()\r\n        console.log(valuesToEdit._id)\r\n\r\n        const toUpdateInst = async(id,body) => {\r\n            try{\r\n                const url = BaseUrl+ \"/data/inst/\"+id;\r\n                const reply = await axios.put(url,body,{headers:{'x-auth-token':userDataf.token}})\r\n                if(reply) {\r\n                    console.log(reply)\r\n                    history.push('/admin')\r\n\r\n                } \r\n            } catch (err) {\r\n                err.response.data.msg && setError(err.response.data.msg)\r\n            }\r\n        }\r\n        toUpdateInst(valuesToEdit._id,valuesToEdit)\r\n        \r\n        \r\n\r\n    }\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <Paper className={classes.paperInput}>\r\n                <form>\r\n                    <Typography variant=\"h5\">\r\n                        Edit Institute Details\r\n                        </Typography>\r\n                        {error && <ErrorNotice message={error} clearError={() => setError('')} />}\r\n                    <Grid container>\r\n\r\n                        <Grid item xs={6}>\r\n\r\n                            <TextField\r\n                                name=\"instName\"\r\n                                variant=\"outlined\"\r\n                                label=\"Institute Name\"\r\n                                autoFocus\r\n                                value={valuesToEdit.instName}\r\n                                onChange={handleChange}\r\n                                className={classes.text}\r\n                                fullWidth />\r\n                            <TextField\r\n                                name=\"instEmail\"\r\n                                variant=\"outlined\"\r\n                                label=\"Email\"\r\n                                value={valuesToEdit.instEmail}\r\n                                onChange={handleChange}\r\n                                className={classes.text}\r\n                                fullWidth />\r\n                            <TextField\r\n                                name=\"instPhone\"\r\n                                variant=\"outlined\"\r\n                                label=\"Phone\"\r\n                                value={valuesToEdit.instPhone}\r\n                                onChange={handleChange}\r\n                                className={classes.text}\r\n                                fullWidth />\r\n                            <TextField\r\n                                name=\"instAddress\"\r\n                                variant=\"outlined\"\r\n                                label=\"Address\"\r\n                                value={valuesToEdit.instAddress}\r\n                                multiline\r\n                                rows={3}\r\n                                onChange={handleChange}\r\n                                className={classes.text}\r\n                                fullWidth />\r\n                        </Grid>\r\n                        <Grid item xs={6} className={classes.side}>\r\n\r\n                            <TextField\r\n                                name=\"instWebsite\"\r\n                                variant=\"outlined\"\r\n                                label=\"Website\"\r\n                                value={valuesToEdit.instWebsite}\r\n                                onChange={handleChange}\r\n                                className={classes.text}\r\n                                fullWidth />\r\n                            <TextField\r\n                                name=\"instLogo\"\r\n                                variant=\"outlined\"\r\n                                label=\"Logo URL\"\r\n                                value={valuesToEdit.instLogo}\r\n                                onChange={handleChange}\r\n                                className={classes.text}\r\n                                fullWidth />\r\n                            <TextField\r\n                                name=\"instMaxNumber\"\r\n                                variant=\"outlined\"\r\n                                label=\"Max Number\"\r\n                                value={valuesToEdit.instMaxNumber}\r\n                                onChange={handleChange}\r\n                                className={classes.text}\r\n                                fullWidth />\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\r\n                                <KeyboardDatePicker\r\n                                    disableToolbar\r\n                                    className={classes.text}\r\n                                    variant=\"inline\"\r\n                                    name=\"instSubDate\"\r\n                                    format=\"MM/dd/yyyy\"\r\n                                    inputVariant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    value={valuesToEdit.instSubDate}\r\n                                    label=\"Subscription End Date\"\r\n                                    fullWidth\r\n                                    size=\"small\"\r\n                                    onChange={handleChange}\r\n                                    // value={selectedDate}\r\n                                    // onChange={handleDateChange}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change date',\r\n                                    }}\r\n                                />\r\n                                <FormControlLabel control={<Checkbox \r\n                                checked={valuesToEdit.instActive}\r\n                                name=\"instActive\"\r\n                                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                onChange={handleChangeActivate}/>} label=\"Activate\" />\r\n                                \r\n                            </MuiPickersUtilsProvider>\r\n                            <Button variant=\"contained\" color=\"primary\" className={classes.button} type=\"submit\"\r\n                                onClick={onSubmitChange} >\r\n                                Update\r\n                            </Button>\r\n\r\n\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport Header from './components/header'\nimport { BrowserRouter as Router, Route, } from 'react-router-dom';\nimport axios from 'axios';\nimport UserContext from './UserContext'\nimport { Container } from '@material-ui/core';\nimport SuperAdmin from './components/SuperAdmin';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport Admin from './components/Admin';\nimport ProtectedRoute2 from './components/ProtectedRoute2';\nimport Home from './components/Home';\nimport EditSuperAdmin from './components/EditSuperAdmin';\nimport ViewSuperAdmin from './components/ViewSuperAdmin';\nimport EditAdmin from './components/EditAdmin';\nimport EditAdminS from './components/EditAdminS';\nimport './App.css';\nimport baseURL from './components/BaseUrl'\n\n\nfunction App() {\n\n\n\n  const [userDataf, setUserDataf] = useState({\n    token: undefined,\n    user: undefined\n  })\n  const [loggged, setLogged] = useState(\"\")\n\n\n  useEffect(() => {\n    const checkLogedIn = async () => {\n      var token = localStorage.getItem(\"auth-token\");\n      if (token === null) {\n        localStorage.setItem(\"auth-token\", \"\");\n        token = \"\"\n      }\n\n      const tokenRes = await axios.post(baseURL + \"/user/tovalidate\", null, { headers: { \"x-auth-token\": token } })\n\n      if (tokenRes) {\n        const found = await axios.get(baseURL + \"/user\", { headers: { \"x-auth-token\": token } })\n        // console.log(found.data)\n        setUserDataf({\n          token: token,\n          user: found.data\n        })\n        setLogged(found.data.role)\n        // if(found.data.role ===\"admin\") history.push('/admin')\n        // if(found.data.role ===\"superadmin\") history.push('/superadmin')\n        \n        // console.log(found.data.role,\"ehat is role\")\n  \n      }\n\n    }\n    checkLogedIn()\n  }, []);\n\n\n\n\n\n  return (\n    <Router>\n      <UserContext.Provider value={{ userDataf, setUserDataf, loggged, setLogged }}>\n\n        <div >\n\n          <Header />\n          <Container>\n     \n              <ProtectedRoute exact path=\"/superadmin\" component={SuperAdmin} />\n              <ProtectedRoute2  path=\"/admin\" component={Admin} />\n              <Route exact path=\"/superadmin/edit/:id\" component={EditSuperAdmin} />\n              <Route exact path=\"/superadmin/view/:id\" component={ViewSuperAdmin} />\n              <Route exact path=\"/suadmin/edit/:id/:uid\" component={EditAdmin} />\n              <Route exact path=\"/a/edit/:id\" component={EditAdminS} />\n              <Route exact path=\"/\" component={Home} />\n     \n          </Container>\n \n        </div>\n      </UserContext.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <App />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}